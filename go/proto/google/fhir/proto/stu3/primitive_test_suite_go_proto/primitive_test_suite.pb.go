//    Copyright 2023 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        v3.21.12
// source: proto/google/fhir/proto/stu3/primitive_test_suite.proto

package primitive_test_suite_go_proto

import (
	datatypes_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/stu3/datatypes_go_proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Union type of all primitives that can be tested for STU3 FHIR.
type PrimitiveProtoUnion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to PrimitiveProtoOneof:
	//
	//	*PrimitiveProtoUnion_Base64Binary
	//	*PrimitiveProtoUnion_Boolean
	//	*PrimitiveProtoUnion_Code
	//	*PrimitiveProtoUnion_Date
	//	*PrimitiveProtoUnion_DateTime
	//	*PrimitiveProtoUnion_Decimal
	//	*PrimitiveProtoUnion_Id
	//	*PrimitiveProtoUnion_Instant
	//	*PrimitiveProtoUnion_Integer
	//	*PrimitiveProtoUnion_Markdown
	//	*PrimitiveProtoUnion_Oid
	//	*PrimitiveProtoUnion_PositiveInt
	//	*PrimitiveProtoUnion_StringProto
	//	*PrimitiveProtoUnion_Time
	//	*PrimitiveProtoUnion_UnsignedInt
	//	*PrimitiveProtoUnion_Uri
	//	*PrimitiveProtoUnion_Uuid
	//	*PrimitiveProtoUnion_Xhtml
	//	*PrimitiveProtoUnion_Reference
	PrimitiveProtoOneof isPrimitiveProtoUnion_PrimitiveProtoOneof `protobuf_oneof:"primitive_proto_oneof"`
}

func (x *PrimitiveProtoUnion) Reset() {
	*x = PrimitiveProtoUnion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrimitiveProtoUnion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrimitiveProtoUnion) ProtoMessage() {}

func (x *PrimitiveProtoUnion) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrimitiveProtoUnion.ProtoReflect.Descriptor instead.
func (*PrimitiveProtoUnion) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_rawDescGZIP(), []int{0}
}

func (m *PrimitiveProtoUnion) GetPrimitiveProtoOneof() isPrimitiveProtoUnion_PrimitiveProtoOneof {
	if m != nil {
		return m.PrimitiveProtoOneof
	}
	return nil
}

func (x *PrimitiveProtoUnion) GetBase64Binary() *datatypes_go_proto.Base64Binary {
	if x, ok := x.GetPrimitiveProtoOneof().(*PrimitiveProtoUnion_Base64Binary); ok {
		return x.Base64Binary
	}
	return nil
}

func (x *PrimitiveProtoUnion) GetBoolean() *datatypes_go_proto.Boolean {
	if x, ok := x.GetPrimitiveProtoOneof().(*PrimitiveProtoUnion_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (x *PrimitiveProtoUnion) GetCode() *datatypes_go_proto.Code {
	if x, ok := x.GetPrimitiveProtoOneof().(*PrimitiveProtoUnion_Code); ok {
		return x.Code
	}
	return nil
}

func (x *PrimitiveProtoUnion) GetDate() *datatypes_go_proto.Date {
	if x, ok := x.GetPrimitiveProtoOneof().(*PrimitiveProtoUnion_Date); ok {
		return x.Date
	}
	return nil
}

func (x *PrimitiveProtoUnion) GetDateTime() *datatypes_go_proto.DateTime {
	if x, ok := x.GetPrimitiveProtoOneof().(*PrimitiveProtoUnion_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (x *PrimitiveProtoUnion) GetDecimal() *datatypes_go_proto.Decimal {
	if x, ok := x.GetPrimitiveProtoOneof().(*PrimitiveProtoUnion_Decimal); ok {
		return x.Decimal
	}
	return nil
}

func (x *PrimitiveProtoUnion) GetId() *datatypes_go_proto.Id {
	if x, ok := x.GetPrimitiveProtoOneof().(*PrimitiveProtoUnion_Id); ok {
		return x.Id
	}
	return nil
}

func (x *PrimitiveProtoUnion) GetInstant() *datatypes_go_proto.Instant {
	if x, ok := x.GetPrimitiveProtoOneof().(*PrimitiveProtoUnion_Instant); ok {
		return x.Instant
	}
	return nil
}

func (x *PrimitiveProtoUnion) GetInteger() *datatypes_go_proto.Integer {
	if x, ok := x.GetPrimitiveProtoOneof().(*PrimitiveProtoUnion_Integer); ok {
		return x.Integer
	}
	return nil
}

func (x *PrimitiveProtoUnion) GetMarkdown() *datatypes_go_proto.Markdown {
	if x, ok := x.GetPrimitiveProtoOneof().(*PrimitiveProtoUnion_Markdown); ok {
		return x.Markdown
	}
	return nil
}

func (x *PrimitiveProtoUnion) GetOid() *datatypes_go_proto.Oid {
	if x, ok := x.GetPrimitiveProtoOneof().(*PrimitiveProtoUnion_Oid); ok {
		return x.Oid
	}
	return nil
}

func (x *PrimitiveProtoUnion) GetPositiveInt() *datatypes_go_proto.PositiveInt {
	if x, ok := x.GetPrimitiveProtoOneof().(*PrimitiveProtoUnion_PositiveInt); ok {
		return x.PositiveInt
	}
	return nil
}

func (x *PrimitiveProtoUnion) GetStringProto() *datatypes_go_proto.String {
	if x, ok := x.GetPrimitiveProtoOneof().(*PrimitiveProtoUnion_StringProto); ok {
		return x.StringProto
	}
	return nil
}

func (x *PrimitiveProtoUnion) GetTime() *datatypes_go_proto.Time {
	if x, ok := x.GetPrimitiveProtoOneof().(*PrimitiveProtoUnion_Time); ok {
		return x.Time
	}
	return nil
}

func (x *PrimitiveProtoUnion) GetUnsignedInt() *datatypes_go_proto.UnsignedInt {
	if x, ok := x.GetPrimitiveProtoOneof().(*PrimitiveProtoUnion_UnsignedInt); ok {
		return x.UnsignedInt
	}
	return nil
}

func (x *PrimitiveProtoUnion) GetUri() *datatypes_go_proto.Uri {
	if x, ok := x.GetPrimitiveProtoOneof().(*PrimitiveProtoUnion_Uri); ok {
		return x.Uri
	}
	return nil
}

func (x *PrimitiveProtoUnion) GetUuid() *datatypes_go_proto.Uuid {
	if x, ok := x.GetPrimitiveProtoOneof().(*PrimitiveProtoUnion_Uuid); ok {
		return x.Uuid
	}
	return nil
}

func (x *PrimitiveProtoUnion) GetXhtml() *datatypes_go_proto.Xhtml {
	if x, ok := x.GetPrimitiveProtoOneof().(*PrimitiveProtoUnion_Xhtml); ok {
		return x.Xhtml
	}
	return nil
}

func (x *PrimitiveProtoUnion) GetReference() *datatypes_go_proto.Reference {
	if x, ok := x.GetPrimitiveProtoOneof().(*PrimitiveProtoUnion_Reference); ok {
		return x.Reference
	}
	return nil
}

type isPrimitiveProtoUnion_PrimitiveProtoOneof interface {
	isPrimitiveProtoUnion_PrimitiveProtoOneof()
}

type PrimitiveProtoUnion_Base64Binary struct {
	Base64Binary *datatypes_go_proto.Base64Binary `protobuf:"bytes,1,opt,name=base64_binary,json=base64Binary,proto3,oneof"`
}

type PrimitiveProtoUnion_Boolean struct {
	Boolean *datatypes_go_proto.Boolean `protobuf:"bytes,2,opt,name=boolean,proto3,oneof"`
}

type PrimitiveProtoUnion_Code struct {
	Code *datatypes_go_proto.Code `protobuf:"bytes,3,opt,name=code,proto3,oneof"`
}

type PrimitiveProtoUnion_Date struct {
	Date *datatypes_go_proto.Date `protobuf:"bytes,4,opt,name=date,proto3,oneof"`
}

type PrimitiveProtoUnion_DateTime struct {
	DateTime *datatypes_go_proto.DateTime `protobuf:"bytes,5,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type PrimitiveProtoUnion_Decimal struct {
	Decimal *datatypes_go_proto.Decimal `protobuf:"bytes,6,opt,name=decimal,proto3,oneof"`
}

type PrimitiveProtoUnion_Id struct {
	Id *datatypes_go_proto.Id `protobuf:"bytes,7,opt,name=id,proto3,oneof"`
}

type PrimitiveProtoUnion_Instant struct {
	Instant *datatypes_go_proto.Instant `protobuf:"bytes,8,opt,name=instant,proto3,oneof"`
}

type PrimitiveProtoUnion_Integer struct {
	Integer *datatypes_go_proto.Integer `protobuf:"bytes,9,opt,name=integer,proto3,oneof"`
}

type PrimitiveProtoUnion_Markdown struct {
	Markdown *datatypes_go_proto.Markdown `protobuf:"bytes,10,opt,name=markdown,proto3,oneof"`
}

type PrimitiveProtoUnion_Oid struct {
	Oid *datatypes_go_proto.Oid `protobuf:"bytes,11,opt,name=oid,proto3,oneof"`
}

type PrimitiveProtoUnion_PositiveInt struct {
	PositiveInt *datatypes_go_proto.PositiveInt `protobuf:"bytes,12,opt,name=positive_int,json=positiveInt,proto3,oneof"`
}

type PrimitiveProtoUnion_StringProto struct {
	StringProto *datatypes_go_proto.String `protobuf:"bytes,13,opt,name=string_proto,json=stringProto,proto3,oneof"`
}

type PrimitiveProtoUnion_Time struct {
	Time *datatypes_go_proto.Time `protobuf:"bytes,14,opt,name=time,proto3,oneof"`
}

type PrimitiveProtoUnion_UnsignedInt struct {
	UnsignedInt *datatypes_go_proto.UnsignedInt `protobuf:"bytes,15,opt,name=unsigned_int,json=unsignedInt,proto3,oneof"`
}

type PrimitiveProtoUnion_Uri struct {
	Uri *datatypes_go_proto.Uri `protobuf:"bytes,16,opt,name=uri,proto3,oneof"`
}

type PrimitiveProtoUnion_Uuid struct {
	Uuid *datatypes_go_proto.Uuid `protobuf:"bytes,17,opt,name=uuid,proto3,oneof"`
}

type PrimitiveProtoUnion_Xhtml struct {
	Xhtml *datatypes_go_proto.Xhtml `protobuf:"bytes,18,opt,name=xhtml,proto3,oneof"`
}

type PrimitiveProtoUnion_Reference struct {
	Reference *datatypes_go_proto.Reference `protobuf:"bytes,19,opt,name=reference,proto3,oneof"`
}

func (*PrimitiveProtoUnion_Base64Binary) isPrimitiveProtoUnion_PrimitiveProtoOneof() {}

func (*PrimitiveProtoUnion_Boolean) isPrimitiveProtoUnion_PrimitiveProtoOneof() {}

func (*PrimitiveProtoUnion_Code) isPrimitiveProtoUnion_PrimitiveProtoOneof() {}

func (*PrimitiveProtoUnion_Date) isPrimitiveProtoUnion_PrimitiveProtoOneof() {}

func (*PrimitiveProtoUnion_DateTime) isPrimitiveProtoUnion_PrimitiveProtoOneof() {}

func (*PrimitiveProtoUnion_Decimal) isPrimitiveProtoUnion_PrimitiveProtoOneof() {}

func (*PrimitiveProtoUnion_Id) isPrimitiveProtoUnion_PrimitiveProtoOneof() {}

func (*PrimitiveProtoUnion_Instant) isPrimitiveProtoUnion_PrimitiveProtoOneof() {}

func (*PrimitiveProtoUnion_Integer) isPrimitiveProtoUnion_PrimitiveProtoOneof() {}

func (*PrimitiveProtoUnion_Markdown) isPrimitiveProtoUnion_PrimitiveProtoOneof() {}

func (*PrimitiveProtoUnion_Oid) isPrimitiveProtoUnion_PrimitiveProtoOneof() {}

func (*PrimitiveProtoUnion_PositiveInt) isPrimitiveProtoUnion_PrimitiveProtoOneof() {}

func (*PrimitiveProtoUnion_StringProto) isPrimitiveProtoUnion_PrimitiveProtoOneof() {}

func (*PrimitiveProtoUnion_Time) isPrimitiveProtoUnion_PrimitiveProtoOneof() {}

func (*PrimitiveProtoUnion_UnsignedInt) isPrimitiveProtoUnion_PrimitiveProtoOneof() {}

func (*PrimitiveProtoUnion_Uri) isPrimitiveProtoUnion_PrimitiveProtoOneof() {}

func (*PrimitiveProtoUnion_Uuid) isPrimitiveProtoUnion_PrimitiveProtoOneof() {}

func (*PrimitiveProtoUnion_Xhtml) isPrimitiveProtoUnion_PrimitiveProtoOneof() {}

func (*PrimitiveProtoUnion_Reference) isPrimitiveProtoUnion_PrimitiveProtoOneof() {}

// Pair representing a FHIR primitive represented as both a json string and as a
// proto.
type ValidPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonString string               `protobuf:"bytes,1,opt,name=json_string,json=jsonString,proto3" json:"json_string,omitempty"`
	Proto      *PrimitiveProtoUnion `protobuf:"bytes,2,opt,name=proto,proto3" json:"proto,omitempty"`
}

func (x *ValidPair) Reset() {
	*x = ValidPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidPair) ProtoMessage() {}

func (x *ValidPair) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidPair.ProtoReflect.Descriptor instead.
func (*ValidPair) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_rawDescGZIP(), []int{1}
}

func (x *ValidPair) GetJsonString() string {
	if x != nil {
		return x.JsonString
	}
	return ""
}

func (x *ValidPair) GetProto() *PrimitiveProtoUnion {
	if x != nil {
		return x.Proto
	}
	return nil
}

type PrimitiveTestSuite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Note: The test suite will fail if any of these are empty.
	ValidPairs    []*ValidPair           `protobuf:"bytes,1,rep,name=valid_pairs,json=validPairs,proto3" json:"valid_pairs,omitempty"`
	InvalidJson   []string               `protobuf:"bytes,2,rep,name=invalid_json,json=invalidJson,proto3" json:"invalid_json,omitempty"`
	InvalidProtos []*PrimitiveProtoUnion `protobuf:"bytes,3,rep,name=invalid_protos,json=invalidProtos,proto3" json:"invalid_protos,omitempty"`
	// If it's impossible to formulate an invalid proto, set this string
	// so that the tests don't fail.
	// E.g., Boolean uses a boolean value datatype, so all values are valid
	NoInvalidProtosReason string `protobuf:"bytes,4,opt,name=no_invalid_protos_reason,json=noInvalidProtosReason,proto3" json:"no_invalid_protos_reason,omitempty"`
}

func (x *PrimitiveTestSuite) Reset() {
	*x = PrimitiveTestSuite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrimitiveTestSuite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrimitiveTestSuite) ProtoMessage() {}

func (x *PrimitiveTestSuite) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrimitiveTestSuite.ProtoReflect.Descriptor instead.
func (*PrimitiveTestSuite) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_rawDescGZIP(), []int{2}
}

func (x *PrimitiveTestSuite) GetValidPairs() []*ValidPair {
	if x != nil {
		return x.ValidPairs
	}
	return nil
}

func (x *PrimitiveTestSuite) GetInvalidJson() []string {
	if x != nil {
		return x.InvalidJson
	}
	return nil
}

func (x *PrimitiveTestSuite) GetInvalidProtos() []*PrimitiveProtoUnion {
	if x != nil {
		return x.InvalidProtos
	}
	return nil
}

func (x *PrimitiveTestSuite) GetNoInvalidProtosReason() string {
	if x != nil {
		return x.NoInvalidProtosReason
	}
	return ""
}

var File_proto_google_fhir_proto_stu3_primitive_test_suite_proto protoreflect.FileDescriptor

var file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_rawDesc = []byte{
	0x0a, 0x37, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x75, 0x33, 0x2f, 0x70,
	0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x75,
	0x69, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x73, 0x74, 0x75, 0x33, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x1a, 0x2c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x75,
	0x33, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xa3, 0x09, 0x0a, 0x13, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x0d, 0x62, 0x61, 0x73,
	0x65, 0x36, 0x34, 0x5f, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x73,
	0x74, 0x75, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34,
	0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34,
	0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x73, 0x74, 0x75, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x62, 0x6f, 0x6f, 0x6c,
	0x65, 0x61, 0x6e, 0x12, 0x32, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x73, 0x74, 0x75, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x48,
	0x00, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x73, 0x74, 0x75, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a, 0x09, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x73, 0x74, 0x75,
	0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x48, 0x00, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x07,
	0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x73, 0x74, 0x75, 0x33,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x48, 0x00,
	0x52, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x73, 0x74, 0x75, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49,
	0x64, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x73, 0x74, 0x75, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x73, 0x74, 0x75, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x48, 0x00, 0x52, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65,
	0x72, 0x12, 0x3e, 0x0a, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x73, 0x74, 0x75, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77,
	0x6e, 0x12, 0x2f, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x73, 0x74, 0x75,
	0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x69, 0x64, 0x48, 0x00, 0x52, 0x03, 0x6f,
	0x69, 0x64, 0x12, 0x48, 0x0a, 0x0c, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69,
	0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x73, 0x74, 0x75, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x0b, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x12, 0x43, 0x0a, 0x0c,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x73, 0x74, 0x75, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x73, 0x74,
	0x75, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x00, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x0c, 0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x5f, 0x69, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x73, 0x74, 0x75, 0x33, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x49, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x0b, 0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x12,
	0x2f, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x73, 0x74, 0x75, 0x33, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x72, 0x69, 0x48, 0x00, 0x52, 0x03, 0x75, 0x72, 0x69,
	0x12, 0x32, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x73, 0x74, 0x75,
	0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x75, 0x69, 0x64, 0x48, 0x00, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x05, 0x78, 0x68, 0x74, 0x6d, 0x6c, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x73, 0x74, 0x75, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x58, 0x68, 0x74,
	0x6d, 0x6c, 0x48, 0x00, 0x52, 0x05, 0x78, 0x68, 0x74, 0x6d, 0x6c, 0x12, 0x41, 0x0a, 0x09, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x73, 0x74, 0x75,
	0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x48, 0x00, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x17,
	0x0a, 0x15, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0x71, 0x0a, 0x09, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x50, 0x61, 0x69, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6a, 0x73, 0x6f, 0x6e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x43, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x73, 0x74, 0x75, 0x33, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x55, 0x6e,
	0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c, 0x02, 0x0a, 0x12, 0x50,
	0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x54, 0x65, 0x73, 0x74, 0x53, 0x75, 0x69, 0x74,
	0x65, 0x12, 0x44, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x73, 0x74, 0x75, 0x33, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x61, 0x69, 0x72, 0x52, 0x0a, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x50, 0x61, 0x69, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x69,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x0e, 0x69, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x73, 0x74, 0x75, 0x33, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72,
	0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x55, 0x6e, 0x69, 0x6f,
	0x6e, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x12, 0x37, 0x0a, 0x18, 0x6e, 0x6f, 0x5f, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x6e, 0x6f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x76, 0x0a, 0x1c, 0x63, 0x6f, 0x6d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x73, 0x74, 0x75,
	0x33, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x01, 0x5a, 0x54, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73,
	0x74, 0x75, 0x33, 0x2f, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x65,
	0x73, 0x74, 0x5f, 0x73, 0x75, 0x69, 0x74, 0x65, 0x5f, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_rawDescOnce sync.Once
	file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_rawDescData = file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_rawDesc
)

func file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_rawDescGZIP() []byte {
	file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_rawDescOnce.Do(func() {
		file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_rawDescData)
	})
	return file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_rawDescData
}

var file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_goTypes = []interface{}{
	(*PrimitiveProtoUnion)(nil),             // 0: google.fhir.stu3.testing.PrimitiveProtoUnion
	(*ValidPair)(nil),                       // 1: google.fhir.stu3.testing.ValidPair
	(*PrimitiveTestSuite)(nil),              // 2: google.fhir.stu3.testing.PrimitiveTestSuite
	(*datatypes_go_proto.Base64Binary)(nil), // 3: google.fhir.stu3.proto.Base64Binary
	(*datatypes_go_proto.Boolean)(nil),      // 4: google.fhir.stu3.proto.Boolean
	(*datatypes_go_proto.Code)(nil),         // 5: google.fhir.stu3.proto.Code
	(*datatypes_go_proto.Date)(nil),         // 6: google.fhir.stu3.proto.Date
	(*datatypes_go_proto.DateTime)(nil),     // 7: google.fhir.stu3.proto.DateTime
	(*datatypes_go_proto.Decimal)(nil),      // 8: google.fhir.stu3.proto.Decimal
	(*datatypes_go_proto.Id)(nil),           // 9: google.fhir.stu3.proto.Id
	(*datatypes_go_proto.Instant)(nil),      // 10: google.fhir.stu3.proto.Instant
	(*datatypes_go_proto.Integer)(nil),      // 11: google.fhir.stu3.proto.Integer
	(*datatypes_go_proto.Markdown)(nil),     // 12: google.fhir.stu3.proto.Markdown
	(*datatypes_go_proto.Oid)(nil),          // 13: google.fhir.stu3.proto.Oid
	(*datatypes_go_proto.PositiveInt)(nil),  // 14: google.fhir.stu3.proto.PositiveInt
	(*datatypes_go_proto.String)(nil),       // 15: google.fhir.stu3.proto.String
	(*datatypes_go_proto.Time)(nil),         // 16: google.fhir.stu3.proto.Time
	(*datatypes_go_proto.UnsignedInt)(nil),  // 17: google.fhir.stu3.proto.UnsignedInt
	(*datatypes_go_proto.Uri)(nil),          // 18: google.fhir.stu3.proto.Uri
	(*datatypes_go_proto.Uuid)(nil),         // 19: google.fhir.stu3.proto.Uuid
	(*datatypes_go_proto.Xhtml)(nil),        // 20: google.fhir.stu3.proto.Xhtml
	(*datatypes_go_proto.Reference)(nil),    // 21: google.fhir.stu3.proto.Reference
}
var file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_depIdxs = []int32{
	3,  // 0: google.fhir.stu3.testing.PrimitiveProtoUnion.base64_binary:type_name -> google.fhir.stu3.proto.Base64Binary
	4,  // 1: google.fhir.stu3.testing.PrimitiveProtoUnion.boolean:type_name -> google.fhir.stu3.proto.Boolean
	5,  // 2: google.fhir.stu3.testing.PrimitiveProtoUnion.code:type_name -> google.fhir.stu3.proto.Code
	6,  // 3: google.fhir.stu3.testing.PrimitiveProtoUnion.date:type_name -> google.fhir.stu3.proto.Date
	7,  // 4: google.fhir.stu3.testing.PrimitiveProtoUnion.date_time:type_name -> google.fhir.stu3.proto.DateTime
	8,  // 5: google.fhir.stu3.testing.PrimitiveProtoUnion.decimal:type_name -> google.fhir.stu3.proto.Decimal
	9,  // 6: google.fhir.stu3.testing.PrimitiveProtoUnion.id:type_name -> google.fhir.stu3.proto.Id
	10, // 7: google.fhir.stu3.testing.PrimitiveProtoUnion.instant:type_name -> google.fhir.stu3.proto.Instant
	11, // 8: google.fhir.stu3.testing.PrimitiveProtoUnion.integer:type_name -> google.fhir.stu3.proto.Integer
	12, // 9: google.fhir.stu3.testing.PrimitiveProtoUnion.markdown:type_name -> google.fhir.stu3.proto.Markdown
	13, // 10: google.fhir.stu3.testing.PrimitiveProtoUnion.oid:type_name -> google.fhir.stu3.proto.Oid
	14, // 11: google.fhir.stu3.testing.PrimitiveProtoUnion.positive_int:type_name -> google.fhir.stu3.proto.PositiveInt
	15, // 12: google.fhir.stu3.testing.PrimitiveProtoUnion.string_proto:type_name -> google.fhir.stu3.proto.String
	16, // 13: google.fhir.stu3.testing.PrimitiveProtoUnion.time:type_name -> google.fhir.stu3.proto.Time
	17, // 14: google.fhir.stu3.testing.PrimitiveProtoUnion.unsigned_int:type_name -> google.fhir.stu3.proto.UnsignedInt
	18, // 15: google.fhir.stu3.testing.PrimitiveProtoUnion.uri:type_name -> google.fhir.stu3.proto.Uri
	19, // 16: google.fhir.stu3.testing.PrimitiveProtoUnion.uuid:type_name -> google.fhir.stu3.proto.Uuid
	20, // 17: google.fhir.stu3.testing.PrimitiveProtoUnion.xhtml:type_name -> google.fhir.stu3.proto.Xhtml
	21, // 18: google.fhir.stu3.testing.PrimitiveProtoUnion.reference:type_name -> google.fhir.stu3.proto.Reference
	0,  // 19: google.fhir.stu3.testing.ValidPair.proto:type_name -> google.fhir.stu3.testing.PrimitiveProtoUnion
	1,  // 20: google.fhir.stu3.testing.PrimitiveTestSuite.valid_pairs:type_name -> google.fhir.stu3.testing.ValidPair
	0,  // 21: google.fhir.stu3.testing.PrimitiveTestSuite.invalid_protos:type_name -> google.fhir.stu3.testing.PrimitiveProtoUnion
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_init() }
func file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_init() {
	if File_proto_google_fhir_proto_stu3_primitive_test_suite_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrimitiveProtoUnion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrimitiveTestSuite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*PrimitiveProtoUnion_Base64Binary)(nil),
		(*PrimitiveProtoUnion_Boolean)(nil),
		(*PrimitiveProtoUnion_Code)(nil),
		(*PrimitiveProtoUnion_Date)(nil),
		(*PrimitiveProtoUnion_DateTime)(nil),
		(*PrimitiveProtoUnion_Decimal)(nil),
		(*PrimitiveProtoUnion_Id)(nil),
		(*PrimitiveProtoUnion_Instant)(nil),
		(*PrimitiveProtoUnion_Integer)(nil),
		(*PrimitiveProtoUnion_Markdown)(nil),
		(*PrimitiveProtoUnion_Oid)(nil),
		(*PrimitiveProtoUnion_PositiveInt)(nil),
		(*PrimitiveProtoUnion_StringProto)(nil),
		(*PrimitiveProtoUnion_Time)(nil),
		(*PrimitiveProtoUnion_UnsignedInt)(nil),
		(*PrimitiveProtoUnion_Uri)(nil),
		(*PrimitiveProtoUnion_Uuid)(nil),
		(*PrimitiveProtoUnion_Xhtml)(nil),
		(*PrimitiveProtoUnion_Reference)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_goTypes,
		DependencyIndexes: file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_depIdxs,
		MessageInfos:      file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_msgTypes,
	}.Build()
	File_proto_google_fhir_proto_stu3_primitive_test_suite_proto = out.File
	file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_rawDesc = nil
	file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_goTypes = nil
	file_proto_google_fhir_proto_stu3_primitive_test_suite_proto_depIdxs = nil
}
