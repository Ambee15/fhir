//    Copyright 2018 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// This file defines extensions to FieldOptions and MessageOptions to enable
// adding FHIR-specific metadata to the proto implementation of the FHIR spec.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.21.12
// source: proto/google/fhir/proto/annotations.proto

package annotations_go_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FhirVersion int32

const (
	FhirVersion_FHIR_VERSION_UNKNOWN FhirVersion = 0
	FhirVersion_DSTU2                FhirVersion = 1
	FhirVersion_STU3                 FhirVersion = 2
	FhirVersion_R4                   FhirVersion = 4
	FhirVersion_R5                   FhirVersion = 5
)

// Enum value maps for FhirVersion.
var (
	FhirVersion_name = map[int32]string{
		0: "FHIR_VERSION_UNKNOWN",
		1: "DSTU2",
		2: "STU3",
		4: "R4",
		5: "R5",
	}
	FhirVersion_value = map[string]int32{
		"FHIR_VERSION_UNKNOWN": 0,
		"DSTU2":                1,
		"STU3":                 2,
		"R4":                   4,
		"R5":                   5,
	}
)

func (x FhirVersion) Enum() *FhirVersion {
	p := new(FhirVersion)
	*p = x
	return p
}

func (x FhirVersion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FhirVersion) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_annotations_proto_enumTypes[0].Descriptor()
}

func (FhirVersion) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_annotations_proto_enumTypes[0]
}

func (x FhirVersion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FhirVersion.Descriptor instead.
func (FhirVersion) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_annotations_proto_rawDescGZIP(), []int{0}
}

// TODO(b/244184211): Unify with StructureDefinitionKindCode
type StructureDefinitionKindValue int32

const (
	StructureDefinitionKindValue_KIND_UNKNOWN        StructureDefinitionKindValue = 0
	StructureDefinitionKindValue_KIND_PRIMITIVE_TYPE StructureDefinitionKindValue = 1
	StructureDefinitionKindValue_KIND_COMPLEX_TYPE   StructureDefinitionKindValue = 2
	StructureDefinitionKindValue_KIND_RESOURCE       StructureDefinitionKindValue = 3
	StructureDefinitionKindValue_KIND_LOGICAL        StructureDefinitionKindValue = 4
)

// Enum value maps for StructureDefinitionKindValue.
var (
	StructureDefinitionKindValue_name = map[int32]string{
		0: "KIND_UNKNOWN",
		1: "KIND_PRIMITIVE_TYPE",
		2: "KIND_COMPLEX_TYPE",
		3: "KIND_RESOURCE",
		4: "KIND_LOGICAL",
	}
	StructureDefinitionKindValue_value = map[string]int32{
		"KIND_UNKNOWN":        0,
		"KIND_PRIMITIVE_TYPE": 1,
		"KIND_COMPLEX_TYPE":   2,
		"KIND_RESOURCE":       3,
		"KIND_LOGICAL":        4,
	}
)

func (x StructureDefinitionKindValue) Enum() *StructureDefinitionKindValue {
	p := new(StructureDefinitionKindValue)
	*p = x
	return p
}

func (x StructureDefinitionKindValue) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StructureDefinitionKindValue) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_annotations_proto_enumTypes[1].Descriptor()
}

func (StructureDefinitionKindValue) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_annotations_proto_enumTypes[1]
}

func (x StructureDefinitionKindValue) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StructureDefinitionKindValue.Descriptor instead.
func (StructureDefinitionKindValue) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_annotations_proto_rawDescGZIP(), []int{1}
}

// To annotate cardinality constraints.
type Requirement int32

const (
	Requirement_NOT_REQUIRED     Requirement = 0
	Requirement_REQUIRED_BY_FHIR Requirement = 1
)

// Enum value maps for Requirement.
var (
	Requirement_name = map[int32]string{
		0: "NOT_REQUIRED",
		1: "REQUIRED_BY_FHIR",
	}
	Requirement_value = map[string]int32{
		"NOT_REQUIRED":     0,
		"REQUIRED_BY_FHIR": 1,
	}
)

func (x Requirement) Enum() *Requirement {
	p := new(Requirement)
	*p = x
	return p
}

func (x Requirement) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Requirement) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_annotations_proto_enumTypes[2].Descriptor()
}

func (Requirement) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_annotations_proto_enumTypes[2]
}

func (x Requirement) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Requirement.Descriptor instead.
func (Requirement) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_annotations_proto_rawDescGZIP(), []int{2}
}

type SearchParameterType int32

const (
	SearchParameterType_INVALID_SEARCH_PARAMETER_TYPE SearchParameterType = 0
	SearchParameterType_NUMBER                        SearchParameterType = 1
	SearchParameterType_DATE                          SearchParameterType = 2
	SearchParameterType_STRING                        SearchParameterType = 3
	SearchParameterType_TOKEN                         SearchParameterType = 4
	SearchParameterType_REFERENCE                     SearchParameterType = 5
	SearchParameterType_COMPOSITE                     SearchParameterType = 6
	SearchParameterType_QUANTITY                      SearchParameterType = 7
	SearchParameterType_URI                           SearchParameterType = 8
	SearchParameterType_SPECIAL                       SearchParameterType = 9
)

// Enum value maps for SearchParameterType.
var (
	SearchParameterType_name = map[int32]string{
		0: "INVALID_SEARCH_PARAMETER_TYPE",
		1: "NUMBER",
		2: "DATE",
		3: "STRING",
		4: "TOKEN",
		5: "REFERENCE",
		6: "COMPOSITE",
		7: "QUANTITY",
		8: "URI",
		9: "SPECIAL",
	}
	SearchParameterType_value = map[string]int32{
		"INVALID_SEARCH_PARAMETER_TYPE": 0,
		"NUMBER":                        1,
		"DATE":                          2,
		"STRING":                        3,
		"TOKEN":                         4,
		"REFERENCE":                     5,
		"COMPOSITE":                     6,
		"QUANTITY":                      7,
		"URI":                           8,
		"SPECIAL":                       9,
	}
)

func (x SearchParameterType) Enum() *SearchParameterType {
	p := new(SearchParameterType)
	*p = x
	return p
}

func (x SearchParameterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchParameterType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_annotations_proto_enumTypes[3].Descriptor()
}

func (SearchParameterType) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_annotations_proto_enumTypes[3]
}

func (x SearchParameterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchParameterType.Descriptor instead.
func (SearchParameterType) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_annotations_proto_rawDescGZIP(), []int{3}
}

type SearchParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type       SearchParameterType `protobuf:"varint,2,opt,name=type,proto3,enum=google.fhir.proto.SearchParameterType" json:"type,omitempty"`
	Expression string              `protobuf:"bytes,3,opt,name=expression,proto3" json:"expression,omitempty"`
}

func (x *SearchParameter) Reset() {
	*x = SearchParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_annotations_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchParameter) ProtoMessage() {}

func (x *SearchParameter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_annotations_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchParameter.ProtoReflect.Descriptor instead.
func (*SearchParameter) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_annotations_proto_rawDescGZIP(), []int{0}
}

func (x *SearchParameter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchParameter) GetType() SearchParameterType {
	if x != nil {
		return x.Type
	}
	return SearchParameterType_INVALID_SEARCH_PARAMETER_TYPE
}

func (x *SearchParameter) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

var file_proto_google_fhir_proto_annotations_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         180887441,
		Name:          "google.fhir.proto.fhir_valueset_url",
		Tag:           "bytes,180887441,opt,name=fhir_valueset_url",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: ([]string)(nil),
		Field:         183546385,
		Name:          "google.fhir.proto.fhir_reference_type",
		Tag:           "bytes,183546385,rep,name=fhir_reference_type",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*StructureDefinitionKindValue)(nil),
		Field:         182131192,
		Name:          "google.fhir.proto.structure_definition_kind",
		Tag:           "varint,182131192,opt,name=structure_definition_kind,enum=google.fhir.proto.StructureDefinitionKindValue",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         204543906,
		Name:          "google.fhir.proto.value_regex",
		Tag:           "bytes,204543906,opt,name=value_regex",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         207562726,
		Name:          "google.fhir.proto.fhir_structure_definition_url",
		Tag:           "bytes,207562726,opt,name=fhir_structure_definition_url",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         255621908,
		Name:          "google.fhir.proto.analytic_proto_for",
		Tag:           "bytes,255621908,opt,name=analytic_proto_for",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: ([]string)(nil),
		Field:         206336851,
		Name:          "google.fhir.proto.fhir_profile_base",
		Tag:           "bytes,206336851,rep,name=fhir_profile_base",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         228208334,
		Name:          "google.fhir.proto.is_abstract_type",
		Tag:           "varint,228208334,opt,name=is_abstract_type",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         228595764,
		Name:          "google.fhir.proto.is_choice_type",
		Tag:           "varint,228595764,opt,name=is_choice_type",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         255621907,
		Name:          "google.fhir.proto.fhir_fixed_system",
		Tag:           "bytes,255621907,opt,name=fhir_fixed_system",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: ([]string)(nil),
		Field:         276863075,
		Name:          "google.fhir.proto.fhir_path_message_constraint",
		Tag:           "bytes,276863075,rep,name=fhir_path_message_constraint",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: ([]string)(nil),
		Field:         378630899,
		Name:          "google.fhir.proto.fhir_path_message_warning_constraint",
		Tag:           "bytes,378630899,rep,name=fhir_path_message_warning_constraint",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         339293157,
		Name:          "google.fhir.proto.is_complex_extension",
		Tag:           "varint,339293157,opt,name=is_complex_extension",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         177048773,
		Name:          "google.fhir.proto.fhir_extension_url",
		Tag:           "bytes,177048773,opt,name=fhir_extension_url",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: ([]*SearchParameter)(nil),
		Field:         325037910,
		Name:          "google.fhir.proto.search_parameter",
		Tag:           "bytes,325037910,rep,name=search_parameter",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         268060945,
		Name:          "google.fhir.proto.fhir_code_system_url",
		Tag:           "bytes,268060945,opt,name=fhir_code_system_url",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         276877913,
		Name:          "google.fhir.proto.enum_valueset_url",
		Tag:           "bytes,276877913,opt,name=enum_valueset_url",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         181000551,
		Name:          "google.fhir.proto.fhir_original_code",
		Tag:           "bytes,181000551,opt,name=fhir_original_code",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         275176953,
		Name:          "google.fhir.proto.source_code_system",
		Tag:           "bytes,275176953,opt,name=source_code_system",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         371253959,
		Name:          "google.fhir.proto.deprecated_code",
		Tag:           "varint,371253959,opt,name=deprecated_code",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*Requirement)(nil),
		Field:         162282766,
		Name:          "google.fhir.proto.validation_requirement",
		Tag:           "varint,162282766,opt,name=validation_requirement,enum=google.fhir.proto.Requirement",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         211855060,
		Name:          "google.fhir.proto.fhir_slice_by",
		Tag:           "bytes,211855060,opt,name=fhir_slice_by",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         211842556,
		Name:          "google.fhir.proto.fhir_slice_of",
		Tag:           "bytes,211842556,opt,name=fhir_slice_of",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         211855323,
		Name:          "google.fhir.proto.fhir_slice_value",
		Tag:           "bytes,211855323,opt,name=fhir_slice_value",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         206340037,
		Name:          "google.fhir.proto.fhir_inlined_extension_url",
		Tag:           "bytes,206340037,opt,name=fhir_inlined_extension_url",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         211854975,
		Name:          "google.fhir.proto.fhir_inlined_coding_system",
		Tag:           "bytes,211854975,opt,name=fhir_inlined_coding_system",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         212122564,
		Name:          "google.fhir.proto.fhir_inlined_coding_code",
		Tag:           "bytes,212122564,opt,name=fhir_inlined_coding_code",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: ([]string)(nil),
		Field:         244450286,
		Name:          "google.fhir.proto.fhir_path_constraint",
		Tag:           "bytes,244450286,rep,name=fhir_path_constraint",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: ([]string)(nil),
		Field:         378479518,
		Name:          "google.fhir.proto.fhir_path_warning_constraint",
		Tag:           "bytes,378479518,rep,name=fhir_path_warning_constraint",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: ([]string)(nil),
		Field:         218884094,
		Name:          "google.fhir.proto.valid_reference_type",
		Tag:           "bytes,218884094,rep,name=valid_reference_type",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         239446062,
		Name:          "google.fhir.proto.referenced_fhir_type",
		Tag:           "bytes,239446062,opt,name=referenced_fhir_type",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.OneofOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         214472422,
		Name:          "google.fhir.proto.fhir_oneof_is_optional",
		Tag:           "varint,214472422,opt,name=fhir_oneof_is_optional",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: (*FhirVersion)(nil),
		Field:         248874083,
		Name:          "google.fhir.proto.fhir_version",
		Tag:           "varint,248874083,opt,name=fhir_version,enum=google.fhir.proto.FhirVersion",
		Filename:      "proto/google/fhir/proto/annotations.proto",
	},
}

// Extension fields to descriptorpb.MessageOptions.
var (
	// If this message is a Code constrained to a specific valueset, this is the
	// valueset identifier.
	//
	// optional string fhir_valueset_url = 180887441;
	E_FhirValuesetUrl = &file_proto_google_fhir_proto_annotations_proto_extTypes[0]
	// If this message is a Reference, the reference is constrained to these
	// resource types.
	//
	// repeated string fhir_reference_type = 183546385;
	E_FhirReferenceType = &file_proto_google_fhir_proto_annotations_proto_extTypes[1]
	// What type of fhir structure does this message represent?
	//
	// optional google.fhir.proto.StructureDefinitionKindValue structure_definition_kind = 182131192;
	E_StructureDefinitionKind = &file_proto_google_fhir_proto_annotations_proto_extTypes[2]
	// For primitive types, values must match this regex if present.
	//
	// optional string value_regex = 204543906;
	E_ValueRegex = &file_proto_google_fhir_proto_annotations_proto_extTypes[3]
	// Url for the structure definition this message was built from.
	//
	// optional string fhir_structure_definition_url = 207562726;
	E_FhirStructureDefinitionUrl = &file_proto_google_fhir_proto_annotations_proto_extTypes[4]
	// Url for the structure definition this analytics message was built from.
	//
	// optional string analytic_proto_for = 255621908;
	E_AnalyticProtoFor = &file_proto_google_fhir_proto_annotations_proto_extTypes[5]
	// A list of structure definitions of elements that this element is a
	// profile of.
	// In the case of a profile of a profile, this will have the Structure
	// definition of all elements in this profile's inheritance chain.
	//
	// repeated string fhir_profile_base = 206336851;
	E_FhirProfileBase = &file_proto_google_fhir_proto_annotations_proto_extTypes[6]
	// This message refers to an abstract type in FHIR
	//
	// optional bool is_abstract_type = 228208334;
	E_IsAbstractType = &file_proto_google_fhir_proto_annotations_proto_extTypes[7]
	// Is this message a wrapper around a choice type?
	//
	// optional bool is_choice_type = 228595764;
	E_IsChoiceType = &file_proto_google_fhir_proto_annotations_proto_extTypes[8]
	// optional string fhir_fixed_system = 255621907;
	E_FhirFixedSystem = &file_proto_google_fhir_proto_annotations_proto_extTypes[9]
	// FHIRPath-based constraints that apply to the message in question.
	// These constraints are propagated from the constraint.expression
	// field on the FHIR ElementDefinition and may be used for data validation.
	//
	// repeated string fhir_path_message_constraint = 276863075;
	E_FhirPathMessageConstraint = &file_proto_google_fhir_proto_annotations_proto_extTypes[10]
	// repeated string fhir_path_message_warning_constraint = 378630899;
	E_FhirPathMessageWarningConstraint = &file_proto_google_fhir_proto_annotations_proto_extTypes[11]
	// Used to differentiate complex vs simple extensions in the case where it is
	// ambiguous.  Specifically, any extension with only a single fhir datatype
	// field will be assumed to be a simple extension UNLESS this annotation is
	// present.
	// Note that this option is NOT set on messages where it can be determined
	// they are complex extensions via inspecting the structure alone (e.g., an
	// extension with more than one data field).
	//
	// optional bool is_complex_extension = 339293157;
	E_IsComplexExtension = &file_proto_google_fhir_proto_annotations_proto_extTypes[12]
	// DEPRECATED: use fhir_profile_base to identify extension, and
	// fhir_structure_definition_url to get the extension url.
	//
	// optional string fhir_extension_url = 177048773;
	//
	// Deprecated: Do not use.
	E_FhirExtensionUrl = &file_proto_google_fhir_proto_annotations_proto_extTypes[13]
	// A list of search parameters defined on the Resource.
	//
	// repeated google.fhir.proto.SearchParameter search_parameter = 325037910;
	E_SearchParameter = &file_proto_google_fhir_proto_annotations_proto_extTypes[14]
)

// Extension fields to descriptorpb.EnumOptions.
var (
	// If this message CodeSystem enum, this is the url for the CodeSystem
	//
	// optional string fhir_code_system_url = 268060945;
	E_FhirCodeSystemUrl = &file_proto_google_fhir_proto_annotations_proto_extTypes[15]
	// If this message ValueSet enum, this is the url for the CodeSystem
	//
	// optional string enum_valueset_url = 276877913;
	E_EnumValuesetUrl = &file_proto_google_fhir_proto_annotations_proto_extTypes[16]
)

// Extension fields to descriptorpb.EnumValueOptions.
var (
	// If we had to rename this code to make a valid enum identifier, what was
	// the original name?
	//
	// optional string fhir_original_code = 181000551;
	E_FhirOriginalCode = &file_proto_google_fhir_proto_annotations_proto_extTypes[17]
	// If the code system cannot be determined by the enum it is a part of,
	// (e.g., a valueset with multiple codesystems), this lists the source system.
	//
	// optional string source_code_system = 275176953;
	E_SourceCodeSystem = &file_proto_google_fhir_proto_annotations_proto_extTypes[18]
	// Flag indicating that the code value has been deprecated.
	//
	// optional bool deprecated_code = 371253959;
	E_DeprecatedCode = &file_proto_google_fhir_proto_annotations_proto_extTypes[19]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// Is this field required?
	//
	// optional google.fhir.proto.Requirement validation_requirement = 162282766;
	E_ValidationRequirement = &file_proto_google_fhir_proto_annotations_proto_extTypes[20]
	// If this field has slices on it, this indicates the subfield to slice it by
	// (slicing.discriminator.path in the structure definition).
	//
	// optional string fhir_slice_by = 211855060;
	E_FhirSliceBy = &file_proto_google_fhir_proto_annotations_proto_extTypes[21]
	// This field is a slice of another field with this name.
	//
	// optional string fhir_slice_of = 211842556;
	E_FhirSliceOf = &file_proto_google_fhir_proto_annotations_proto_extTypes[22]
	// If this field is a slice, this is the value of the field indicated by the
	// fhir_slice_by_field on the main field that should be placed in this slice.
	//
	// optional string fhir_slice_value = 211855323;
	E_FhirSliceValue = &file_proto_google_fhir_proto_annotations_proto_extTypes[23]
	// Indicates the url for an extension slice.
	// This is a special case of the fhir_slice_value annotation that implies:
	// * fhir_slice_by = "url"  on the extension field
	// * fhir_slice_of = "extension" on this field
	// This has the additional behavior of inlining simple extensions (i.e.,
	// extensions with a value, rather than sub-extensions) as the value
	// itself.
	//
	// optional string fhir_inlined_extension_url = 206340037;
	E_FhirInlinedExtensionUrl = &file_proto_google_fhir_proto_annotations_proto_extTypes[24]
	// Indicates the system for a coding slice within a codeable concept.
	// This is a special case of the fhir_slice_value annotation that implies:
	// * fhir_slice_by = "code"  on the coding field
	// * fhir_slice_of = "coding" on this field
	// This has the additional behavior of inlining the code directly, instead
	// of a coding with fixed system.
	//
	// optional string fhir_inlined_coding_system = 211854975;
	E_FhirInlinedCodingSystem = &file_proto_google_fhir_proto_annotations_proto_extTypes[25]
	// Indicates the code for a coding slice within a codeable concept.
	// This should only be used on fields that have fhir_inlined_coding_system
	// set.  In addition to the implications of fhir_inlined_coding_system,
	// this also sets a fixed code.
	//
	// optional string fhir_inlined_coding_code = 212122564;
	E_FhirInlinedCodingCode = &file_proto_google_fhir_proto_annotations_proto_extTypes[26]
	// FHIRPath-based constraints that apply to the field in question.
	// These constraints are propagated from the constraint.expression
	// field on the FHIR ElementDefinition and may be used for data validation.
	//
	// repeated string fhir_path_constraint = 244450286;
	E_FhirPathConstraint = &file_proto_google_fhir_proto_annotations_proto_extTypes[27]
	// repeated string fhir_path_warning_constraint = 378479518;
	E_FhirPathWarningConstraint = &file_proto_google_fhir_proto_annotations_proto_extTypes[28]
	// Indicates which resource types can be valid references.
	//
	// repeated string valid_reference_type = 218884094;
	E_ValidReferenceType = &file_proto_google_fhir_proto_annotations_proto_extTypes[29]
	// Indicates the base FHIR resource type a ReferenceId field points to.
	//
	// optional string referenced_fhir_type = 239446062;
	E_ReferencedFhirType = &file_proto_google_fhir_proto_annotations_proto_extTypes[30]
)

// Extension fields to descriptorpb.OneofOptions.
var (
	// Whether or not this oneof is optional
	// If absent, oneofs are assumed to be REQUIRED if their containing message is
	// set. The most common case of oneofs is choice types, where the requirements
	// should be applied to the containing message.
	//
	// optional bool fhir_oneof_is_optional = 214472422;
	E_FhirOneofIsOptional = &file_proto_google_fhir_proto_annotations_proto_extTypes[31]
)

// Extension fields to descriptorpb.FileOptions.
var (
	// What version of FHIR the protos in this file use (e.g., STU3, R4)
	//
	// optional google.fhir.proto.FhirVersion fhir_version = 248874083;
	E_FhirVersion = &file_proto_google_fhir_proto_annotations_proto_extTypes[32]
)

var File_proto_google_fhir_proto_annotations_proto protoreflect.FileDescriptor

var file_proto_google_fhir_proto_annotations_proto_rawDesc = []byte{
	0x0a, 0x29, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x81, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2a, 0x4c, 0x0a, 0x0b, 0x46, 0x68, 0x69, 0x72, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x14, 0x46, 0x48, 0x49, 0x52, 0x5f, 0x56, 0x45, 0x52, 0x53,
	0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x44, 0x53, 0x54, 0x55, 0x32, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x54, 0x55, 0x33,
	0x10, 0x02, 0x12, 0x06, 0x0a, 0x02, 0x52, 0x34, 0x10, 0x04, 0x12, 0x06, 0x0a, 0x02, 0x52, 0x35,
	0x10, 0x05, 0x2a, 0x85, 0x01, 0x0a, 0x1c, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x50, 0x52,
	0x49, 0x4d, 0x49, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x01, 0x12, 0x15,
	0x0a, 0x11, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x58, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x52, 0x45,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x4b, 0x49, 0x4e, 0x44,
	0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x43, 0x41, 0x4c, 0x10, 0x04, 0x2a, 0x35, 0x0a, 0x0b, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x4f, 0x54,
	0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x52,
	0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x5f, 0x42, 0x59, 0x5f, 0x46, 0x48, 0x49, 0x52, 0x10,
	0x01, 0x2a, 0xa7, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x5f, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x5f, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x41, 0x54, 0x45,
	0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x09,
	0x0a, 0x05, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x45, 0x46,
	0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50,
	0x4f, 0x53, 0x49, 0x54, 0x45, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x51, 0x55, 0x41, 0x4e, 0x54,
	0x49, 0x54, 0x59, 0x10, 0x07, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x52, 0x49, 0x10, 0x08, 0x12, 0x0b,
	0x0a, 0x07, 0x53, 0x50, 0x45, 0x43, 0x49, 0x41, 0x4c, 0x10, 0x09, 0x3a, 0x4e, 0x0a, 0x11, 0x66,
	0x68, 0x69, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x75, 0x72, 0x6c,
	0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x91, 0xbf, 0xa0, 0x56, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x68, 0x69, 0x72,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x3a, 0x52, 0x0a, 0x13, 0x66,
	0x68, 0x69, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x91, 0xe4, 0xc2, 0x57, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x66, 0x68,
	0x69, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x3a,
	0x8f, 0x01, 0x0a, 0x19, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1f, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xf8,
	0xb3, 0xec, 0x56, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b,
	0x69, 0x6e, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x17, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e,
	0x64, 0x3a, 0x43, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x65, 0x78,
	0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0xa2, 0xaf, 0xc4, 0x61, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x65, 0x67, 0x65, 0x78, 0x3a, 0x65, 0x0a, 0x1d, 0x66, 0x68, 0x69, 0x72, 0x5f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe6, 0xcf, 0xfc, 0x62, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x1a, 0x66, 0x68, 0x69, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x3a, 0x50, 0x0a,
	0x12, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x66, 0x6f, 0x72, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x94, 0xf6, 0xf1, 0x79, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x6f, 0x72, 0x3a,
	0x4e, 0x0a, 0x11, 0x66, 0x68, 0x69, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd3, 0xe6, 0xb1, 0x62, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f,
	0x66, 0x68, 0x69, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x65, 0x3a,
	0x4c, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x61, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0xce, 0xdd, 0xe8, 0x6c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69,
	0x73, 0x41, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x48, 0x0a,
	0x0e, 0x69, 0x73, 0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0xb4, 0xb0, 0x80, 0x6d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x43, 0x68, 0x6f,
	0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x4e, 0x0a, 0x11, 0x66, 0x68, 0x69, 0x72, 0x5f,
	0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x93, 0xf6,
	0xf1, 0x79, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x68, 0x69, 0x72, 0x46, 0x69, 0x78, 0x65,
	0x64, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x3a, 0x64, 0x0a, 0x1c, 0x66, 0x68, 0x69, 0x72, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe3, 0xb0, 0x82, 0x84, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x19, 0x66, 0x68, 0x69, 0x72, 0x50, 0x61, 0x74, 0x68, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x3a, 0x73, 0x0a,
	0x24, 0x66, 0x68, 0x69, 0x72, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xf3, 0xe5, 0xc5, 0xb4, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x20, 0x66, 0x68, 0x69, 0x72, 0x50, 0x61, 0x74, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x74, 0x3a, 0x55, 0x0a, 0x14, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78,
	0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe5, 0xe7, 0xe4, 0xa1,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x54, 0x0a, 0x12, 0x66, 0x68, 0x69,
	0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x12,
	0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0xc5, 0x99, 0xb6, 0x54, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x10, 0x66,
	0x68, 0x69, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x3a,
	0x72, 0x0a, 0x10, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd6, 0xde, 0xfe, 0x9a, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x52, 0x0f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x3a, 0x50, 0x0a, 0x14, 0x66, 0x68, 0x69, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x72, 0x6c, 0x12, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e,
	0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x91, 0x92, 0xe9, 0x7f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x66, 0x68, 0x69, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x55, 0x72, 0x6c, 0x3a, 0x4c, 0x0a, 0x11, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75,
	0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd9, 0xa4, 0x83, 0x84, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x65, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x65, 0x74,
	0x55, 0x72, 0x6c, 0x3a, 0x52, 0x0a, 0x12, 0x66, 0x68, 0x69, 0x72, 0x5f, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe7, 0xb2, 0xa7,
	0x56, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x66, 0x68, 0x69, 0x72, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x3a, 0x53, 0x0a, 0x12, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x21, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0xf9, 0xbb, 0x9b, 0x83, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x3a, 0x4e, 0x0a, 0x0f,
	0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0xc7, 0xc5, 0x83, 0xb1, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x64, 0x65,
	0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x3a, 0x77, 0x0a, 0x16,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x8e, 0xfa, 0xb0, 0x4d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x15,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x3a, 0x44, 0x0a, 0x0d, 0x66, 0x68, 0x69, 0x72, 0x5f, 0x73, 0x6c,
	0x69, 0x63, 0x65, 0x5f, 0x62, 0x79, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd4, 0xcd, 0x82, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x66, 0x68, 0x69, 0x72, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x42, 0x79, 0x3a, 0x44, 0x0a, 0x0d, 0x66,
	0x68, 0x69, 0x72, 0x5f, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x66, 0x12, 0x1d, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xfc, 0xeb, 0x81, 0x65,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x68, 0x69, 0x72, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x4f,
	0x66, 0x3a, 0x4a, 0x0a, 0x10, 0x66, 0x68, 0x69, 0x72, 0x5f, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0xdb, 0xcf, 0x82, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66,
	0x68, 0x69, 0x72, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x5d, 0x0a,
	0x1a, 0x66, 0x68, 0x69, 0x72, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x12, 0x1d, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xc5, 0xff, 0xb1, 0x62, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x17, 0x66, 0x68, 0x69, 0x72, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x64,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x3a, 0x5d, 0x0a, 0x1a,
	0x66, 0x68, 0x69, 0x72, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xff, 0xcc, 0x82, 0x65, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x17, 0x66, 0x68, 0x69, 0x72, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x64, 0x43,
	0x6f, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x3a, 0x59, 0x0a, 0x18, 0x66,
	0x68, 0x69, 0x72, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xc4, 0xf7, 0x92, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x15, 0x66, 0x68, 0x69, 0x72, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x64, 0x43, 0x6f, 0x64, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x3a, 0x52, 0x0a, 0x14, 0x66, 0x68, 0x69, 0x72, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x1d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xee, 0x87,
	0xc8, 0x74, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x66, 0x68, 0x69, 0x72, 0x50, 0x61, 0x74, 0x68,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x3a, 0x62, 0x0a, 0x1c, 0x66, 0x68,
	0x69, 0x72, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x9e, 0xc7, 0xbc, 0xb4, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x19, 0x66, 0x68, 0x69, 0x72, 0x50, 0x61, 0x74, 0x68, 0x57, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x3a, 0x52,
	0x0a, 0x14, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xfe, 0xcf, 0xaf, 0x68, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x3a, 0x52, 0x0a, 0x14, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x64,
	0x5f, 0x66, 0x68, 0x69, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xae, 0xd0, 0x96, 0x72, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x64, 0x46, 0x68,
	0x69, 0x72, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x55, 0x0a, 0x16, 0x66, 0x68, 0x69, 0x72, 0x5f, 0x6f,
	0x6e, 0x65, 0x6f, 0x66, 0x5f, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xe6, 0xad, 0xa2, 0x66, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x66, 0x68, 0x69, 0x72, 0x4f, 0x6e,
	0x65, 0x6f, 0x66, 0x49, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x3a, 0x62, 0x0a,
	0x0c, 0x66, 0x68, 0x69, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe3, 0x88, 0xd6, 0x76,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x68, 0x69, 0x72, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x66, 0x68, 0x69, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x42, 0x6c, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x0b, 0x41, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5a, 0x46, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_google_fhir_proto_annotations_proto_rawDescOnce sync.Once
	file_proto_google_fhir_proto_annotations_proto_rawDescData = file_proto_google_fhir_proto_annotations_proto_rawDesc
)

func file_proto_google_fhir_proto_annotations_proto_rawDescGZIP() []byte {
	file_proto_google_fhir_proto_annotations_proto_rawDescOnce.Do(func() {
		file_proto_google_fhir_proto_annotations_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_google_fhir_proto_annotations_proto_rawDescData)
	})
	return file_proto_google_fhir_proto_annotations_proto_rawDescData
}

var file_proto_google_fhir_proto_annotations_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_google_fhir_proto_annotations_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_google_fhir_proto_annotations_proto_goTypes = []interface{}{
	(FhirVersion)(0),                      // 0: google.fhir.proto.FhirVersion
	(StructureDefinitionKindValue)(0),     // 1: google.fhir.proto.StructureDefinitionKindValue
	(Requirement)(0),                      // 2: google.fhir.proto.Requirement
	(SearchParameterType)(0),              // 3: google.fhir.proto.SearchParameterType
	(*SearchParameter)(nil),               // 4: google.fhir.proto.SearchParameter
	(*descriptorpb.MessageOptions)(nil),   // 5: google.protobuf.MessageOptions
	(*descriptorpb.EnumOptions)(nil),      // 6: google.protobuf.EnumOptions
	(*descriptorpb.EnumValueOptions)(nil), // 7: google.protobuf.EnumValueOptions
	(*descriptorpb.FieldOptions)(nil),     // 8: google.protobuf.FieldOptions
	(*descriptorpb.OneofOptions)(nil),     // 9: google.protobuf.OneofOptions
	(*descriptorpb.FileOptions)(nil),      // 10: google.protobuf.FileOptions
}
var file_proto_google_fhir_proto_annotations_proto_depIdxs = []int32{
	3,  // 0: google.fhir.proto.SearchParameter.type:type_name -> google.fhir.proto.SearchParameterType
	5,  // 1: google.fhir.proto.fhir_valueset_url:extendee -> google.protobuf.MessageOptions
	5,  // 2: google.fhir.proto.fhir_reference_type:extendee -> google.protobuf.MessageOptions
	5,  // 3: google.fhir.proto.structure_definition_kind:extendee -> google.protobuf.MessageOptions
	5,  // 4: google.fhir.proto.value_regex:extendee -> google.protobuf.MessageOptions
	5,  // 5: google.fhir.proto.fhir_structure_definition_url:extendee -> google.protobuf.MessageOptions
	5,  // 6: google.fhir.proto.analytic_proto_for:extendee -> google.protobuf.MessageOptions
	5,  // 7: google.fhir.proto.fhir_profile_base:extendee -> google.protobuf.MessageOptions
	5,  // 8: google.fhir.proto.is_abstract_type:extendee -> google.protobuf.MessageOptions
	5,  // 9: google.fhir.proto.is_choice_type:extendee -> google.protobuf.MessageOptions
	5,  // 10: google.fhir.proto.fhir_fixed_system:extendee -> google.protobuf.MessageOptions
	5,  // 11: google.fhir.proto.fhir_path_message_constraint:extendee -> google.protobuf.MessageOptions
	5,  // 12: google.fhir.proto.fhir_path_message_warning_constraint:extendee -> google.protobuf.MessageOptions
	5,  // 13: google.fhir.proto.is_complex_extension:extendee -> google.protobuf.MessageOptions
	5,  // 14: google.fhir.proto.fhir_extension_url:extendee -> google.protobuf.MessageOptions
	5,  // 15: google.fhir.proto.search_parameter:extendee -> google.protobuf.MessageOptions
	6,  // 16: google.fhir.proto.fhir_code_system_url:extendee -> google.protobuf.EnumOptions
	6,  // 17: google.fhir.proto.enum_valueset_url:extendee -> google.protobuf.EnumOptions
	7,  // 18: google.fhir.proto.fhir_original_code:extendee -> google.protobuf.EnumValueOptions
	7,  // 19: google.fhir.proto.source_code_system:extendee -> google.protobuf.EnumValueOptions
	7,  // 20: google.fhir.proto.deprecated_code:extendee -> google.protobuf.EnumValueOptions
	8,  // 21: google.fhir.proto.validation_requirement:extendee -> google.protobuf.FieldOptions
	8,  // 22: google.fhir.proto.fhir_slice_by:extendee -> google.protobuf.FieldOptions
	8,  // 23: google.fhir.proto.fhir_slice_of:extendee -> google.protobuf.FieldOptions
	8,  // 24: google.fhir.proto.fhir_slice_value:extendee -> google.protobuf.FieldOptions
	8,  // 25: google.fhir.proto.fhir_inlined_extension_url:extendee -> google.protobuf.FieldOptions
	8,  // 26: google.fhir.proto.fhir_inlined_coding_system:extendee -> google.protobuf.FieldOptions
	8,  // 27: google.fhir.proto.fhir_inlined_coding_code:extendee -> google.protobuf.FieldOptions
	8,  // 28: google.fhir.proto.fhir_path_constraint:extendee -> google.protobuf.FieldOptions
	8,  // 29: google.fhir.proto.fhir_path_warning_constraint:extendee -> google.protobuf.FieldOptions
	8,  // 30: google.fhir.proto.valid_reference_type:extendee -> google.protobuf.FieldOptions
	8,  // 31: google.fhir.proto.referenced_fhir_type:extendee -> google.protobuf.FieldOptions
	9,  // 32: google.fhir.proto.fhir_oneof_is_optional:extendee -> google.protobuf.OneofOptions
	10, // 33: google.fhir.proto.fhir_version:extendee -> google.protobuf.FileOptions
	1,  // 34: google.fhir.proto.structure_definition_kind:type_name -> google.fhir.proto.StructureDefinitionKindValue
	4,  // 35: google.fhir.proto.search_parameter:type_name -> google.fhir.proto.SearchParameter
	2,  // 36: google.fhir.proto.validation_requirement:type_name -> google.fhir.proto.Requirement
	0,  // 37: google.fhir.proto.fhir_version:type_name -> google.fhir.proto.FhirVersion
	38, // [38:38] is the sub-list for method output_type
	38, // [38:38] is the sub-list for method input_type
	34, // [34:38] is the sub-list for extension type_name
	1,  // [1:34] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_proto_google_fhir_proto_annotations_proto_init() }
func file_proto_google_fhir_proto_annotations_proto_init() {
	if File_proto_google_fhir_proto_annotations_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_google_fhir_proto_annotations_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_google_fhir_proto_annotations_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   1,
			NumExtensions: 33,
			NumServices:   0,
		},
		GoTypes:           file_proto_google_fhir_proto_annotations_proto_goTypes,
		DependencyIndexes: file_proto_google_fhir_proto_annotations_proto_depIdxs,
		EnumInfos:         file_proto_google_fhir_proto_annotations_proto_enumTypes,
		MessageInfos:      file_proto_google_fhir_proto_annotations_proto_msgTypes,
		ExtensionInfos:    file_proto_google_fhir_proto_annotations_proto_extTypes,
	}.Build()
	File_proto_google_fhir_proto_annotations_proto = out.File
	file_proto_google_fhir_proto_annotations_proto_rawDesc = nil
	file_proto_google_fhir_proto_annotations_proto_goTypes = nil
	file_proto_google_fhir_proto_annotations_proto_depIdxs = nil
}
