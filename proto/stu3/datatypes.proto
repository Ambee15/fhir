//    Copyright 2018 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// The FHIR specification defines a set of data types that are used for the
// resource elements. There are two categories of data types: simple/primitive
// types, which are single elements, and complex types, which are re-usable
// groups of elements. This file defines proto messages both of these data
// types. They are combined in a single file because of circular dependencies
// involving extensions: primititve types can have extensions, extentions
// can contain complex types, and complex types are built from primitive types.
//
// We've chosen to use protocol messages for all data types, even though
// some can be reasonably represented as primitive proto types. This was done
// for three main reasons:
// - consistency with the primitive types that do benefit from a more
//   sophisticated representation
// - better type safety in code
// - to make sure that each fhir resource element has an existence indicator,
//   a has_X type method, associated with it.
//
// The primitive types in this file were hand-constructed, but all all complex
// types in this file were autogenerated from their corresponding
// StructureDefinitions using j/c/g/research/health/fhir/stu3:ProtoGenerator.

syntax = "proto3";

package google.fhir.stu3.proto;

import "google/fhir/proto/stu3/annotations.proto";

option java_multiple_files = true;
option java_package = "com.google.fhir.stu3.proto";

// Primitive Type base64Binary
// See http://hl7.org/fhir/datatypes.html#base64Binary
message Base64Binary {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;

  // Primitive value for base64Binary
  bytes value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// Primitive Type boolean
// See http://hl7.org/fhir/datatypes.html#boolean
message Boolean {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;

  // Primitive value for boolean
  bool value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// Primitive Type code
// See http://hl7.org/fhir/datatypes.html#code
message Code {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;

  // Primitive value for code
  string value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// Primitive Type date
// See http://hl7.org/fhir/datatypes.html#date
message Date {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;

  enum Precision {
    PRECISION_UNSPECIFIED = 0;
    YEAR = 1;
    MONTH = 2;
    DAY = 3;
  };

  // Primitive value for date, with timezone extensions parsed if present.
  int64 value_us = 1;
  string timezone = 2;
  Precision precision = 3;

  // xml:id (or equivalent in JSON)
  String id = 4;

  // Additional Content defined by implementations
  repeated Extension extension = 5;
}

// Primitive Type dateTime
// See http://hl7.org/fhir/datatypes.html#dateTime
message DateTime {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;

  enum Precision {
    PRECISION_UNSPECIFIED = 0;
    YEAR = 1;
    MONTH = 2;
    DAY = 3;
    SECOND = 4;
    MILLISECOND = 5;
    MICROSECOND = 6;
  };

  // Primitive value for dateTime
  int64 value_us = 1;
  string timezone = 2;
  Precision precision = 3;

  // xml:id (or equivalent in JSON)
  String id = 4;

  // Additional Content defined by implementations
  repeated Extension extension = 5;
}

// Primitive Type decimal
// See http://hl7.org/fhir/datatypes.html#decimal
message Decimal {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;

  // Primitive value for decimal, stored as a string to preserve precision.
  string value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// Primitive Type id
// See http://hl7.org/fhir/datatypes.html#id
message Id {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;

  // Primitive value for id
  string value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// Primitive Type instant
// See http://hl7.org/fhir/datatypes.html#instant
message Instant {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;

  enum Precision {
    PRECISION_UNSPECIFIED = 0;
    SECOND = 1;
    MILLISECOND = 2;
    MICROSECOND = 3;
  };

  // Primitive value for instant
  int64 value_us = 1;
  string timezone = 2;
  Precision precision = 3;

  // xml:id (or equivalent in JSON)
  String id = 4;

  // Additional Content defined by implementations
  repeated Extension extension = 5;
}

// Primitive Type integer
// See http://hl7.org/fhir/datatypes.html#integer
message Integer {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;

  // Primitive value for integer
  sint32 value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// Primitive Type markdown
// See http://hl7.org/fhir/datatypes.html#markdown
message Markdown {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;

  // Primitive value for markdown
  string value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// Primitive Type oid
// See http://hl7.org/fhir/datatypes.html#oid
message Oid {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;

  // Primitive value for oid
  string value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// Primitive Type positiveInt
// See http://hl7.org/fhir/datatypes.html#positiveInt
message PositiveInt {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;

  // Primitive value for positiveInt
  uint32 value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// Primitive Type string
// See http://hl7.org/fhir/datatypes.html#string
message String {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;

  // Primitive value for string
  string value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// Primitive Type time
// See http://hl7.org/fhir/datatypes.html#time
message Time {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;

  enum Precision {
    PRECISION_UNSPECIFIED = 0;
    SECOND = 1;
    MILLISECOND = 2;
    MICROSECOND = 3;
  };

  // Primitive value for time in microseconds since midnight
  int64 value_us = 1;
  Precision precision = 2;

  // xml:id (or equivalent in JSON)
  String id = 3;

  // Additional Content defined by implementations
  repeated Extension extension = 4;
}

// Primitive Type unsignedInt
// See http://hl7.org/fhir/datatypes.html#unsignedInt
message UnsignedInt {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;

  // Primitive value for unsignedInt
  uint32 value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// Primitive Type uri
// See http://hl7.org/fhir/datatypes.html#uri
message Uri {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;

  // Primitive value for uri
  string value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// An address expressed using postal conventions (as opposed to GPS or other
// location definition formats) See
// https://www.hl7.org/fhir/datatypes.html#Address
message Address {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // home | work | temp | old - purpose of this address
  AddressUseCode use = 3;

  // postal | physical | both
  AddressTypeCode type = 4;

  // Text representation of the address
  String text = 5;

  // Street name, number, direction & P.O. Box etc.
  repeated String line = 6;

  // Name of city, town etc.
  String city = 7;

  // District name (aka county)
  String district = 8;

  // Sub-unit of country (abbreviations ok)
  String state = 9;

  // Postal code for area
  String postal_code = 10;

  // Country (e.g. can be ISO 3166 2 or 3 letter code)
  String country = 11;

  // Time period when address was/is in use
  Period period = 12;
}

// A duration of time during which an organism (or a process) has existed
// See https://www.hl7.org/fhir/datatypes.html#Age
message Age {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // Numerical value (with implicit precision)
  Decimal value = 3;

  // < | <= | >= | > - how to understand the value
  QuantityComparatorCode comparator = 4;

  // Unit representation
  String unit = 5;

  // System that defines coded unit form
  Uri system = 6;

  // Coded form of the unit
  Code code = 7;
}

// Text node with attribution
// See https://www.hl7.org/fhir/datatypes.html#Annotation
message Annotation {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // Individual responsible for the annotation
  message Author {
    oneof author {
      Reference reference = 1;
      String string_value = 2 [json_name = "string"];
    }
  }
  Author author = 3 [(is_choice_type) = true];

  // When the annotation was made
  DateTime time = 4;

  // The annotation  - text content
  String text = 5 [(validation_requirement) = REQUIRED_BY_FHIR];
}

// Content in a format defined elsewhere
// See https://www.hl7.org/fhir/datatypes.html#Attachment
message Attachment {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // Mime type of the content, with charset etc.
  MimeTypeCode content_type = 3;

  // Human language of the content (BCP-47)
  LanguageCode language = 4;

  // Data inline, base64ed
  Base64Binary data = 5;

  // Uri where the data can be found
  Uri url = 6;

  // Number of bytes of content (if url provided)
  UnsignedInt size = 7;

  // Hash of the data (sha-1, base64ed)
  Base64Binary hash = 8;

  // Label to display in place of the data
  String title = 9;

  // Date attachment was first created
  DateTime creation = 10;
}

// Base for elements defined inside a resource
// See https://www.hl7.org/fhir/datatypes.html#BackboneElement
message BackboneElement {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // Extensions that cannot be ignored
  repeated Extension modifier_extension = 3;
}

// Concept - reference to a terminology or just  text
// See https://www.hl7.org/fhir/datatypes.html#CodeableConcept
message CodeableConcept {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // Code defined by a terminology system
  repeated Coding coding = 3;

  // Plain text representation of the concept
  String text = 4;
}

// A reference to a code defined by a terminology system
// See https://www.hl7.org/fhir/datatypes.html#Coding
message Coding {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // Identity of the terminology system
  Uri system = 3;

  // Version of the system - if relevant
  String version = 4;

  // Symbol in syntax defined by the system
  Code code = 5;

  // Representation defined by the system
  String display = 6;

  // If this coding was chosen directly by the user
  Boolean user_selected = 7;
}

// Contact information
// See https://www.hl7.org/fhir/datatypes.html#ContactDetail
message ContactDetail {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // Name of an individual to contact
  String name = 3;

  // Contact details for individual or organization
  repeated ContactPoint telecom = 4;
}

// Details of a Technology mediated contact point (phone, fax, email, etc.)
// See https://www.hl7.org/fhir/datatypes.html#ContactPoint
message ContactPoint {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // phone | fax | email | pager | url | sms | other
  ContactPointSystemCode system = 3;

  // The actual contact point details
  String value = 4;

  // home | work | temp | old | mobile - purpose of this contact point
  ContactPointUseCode use = 5;

  // Specify preferred order of use (1 = highest)
  PositiveInt rank = 6;

  // Time period when the contact point was/is in use
  Period period = 7;
}

// Contributor information
// See https://www.hl7.org/fhir/datatypes.html#Contributor
message Contributor {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // author | editor | reviewer | endorser
  ContributorTypeCode type = 3 [(validation_requirement) = REQUIRED_BY_FHIR];

  // Who contributed the content
  String name = 4 [(validation_requirement) = REQUIRED_BY_FHIR];

  // Contact details of the contributor
  repeated ContactDetail contact = 5;
}

// A measured or measurable amount
// See https://www.hl7.org/fhir/datatypes.html#Count
message Count {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // Numerical value (with implicit precision)
  Decimal value = 3;

  // < | <= | >= | > - how to understand the value
  QuantityComparatorCode comparator = 4;

  // Unit representation
  String unit = 5;

  // System that defines coded unit form
  Uri system = 6;

  // Coded form of the unit
  Code code = 7;
}

// Describes a required data item
// See https://www.hl7.org/fhir/datatypes.html#DataRequirement
message DataRequirement {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // The type of the required data
  FHIRAllTypesCode type = 3 [(validation_requirement) = REQUIRED_BY_FHIR];

  // The profile of the required data
  repeated Uri profile = 4;

  // Indicates that specific structure elements are referenced by the knowledge
  // module
  repeated String must_support = 5;

  // What codes are expected
  message CodeFilter {
    // xml:id (or equivalent in JSON)
    String id = 1;

    // Additional Content defined by implementations
    repeated Extension extension = 2;

    // The code-valued attribute of the filter
    String path = 3 [(validation_requirement) = REQUIRED_BY_FHIR];

    // Valueset for the filter
    message ValueSet {
      oneof value_set {
        String string_value = 1 [json_name = "string"];
        Reference reference = 2;
      }
    }
    ValueSet value_set = 4 [(is_choice_type) = true];

    // What code is expected
    repeated Code value_code = 5;

    // What Coding is expected
    repeated Coding value_coding = 6;

    // What CodeableConcept is expected
    repeated CodeableConcept value_codeable_concept = 7;
  }
  repeated CodeFilter code_filter = 6;

  // What dates/date ranges are expected
  message DateFilter {
    // xml:id (or equivalent in JSON)
    String id = 1;

    // Additional Content defined by implementations
    repeated Extension extension = 2;

    // The date-valued attribute of the filter
    String path = 3 [(validation_requirement) = REQUIRED_BY_FHIR];

    // The value of the filter, as a Period, DateTime, or Duration value
    message Value {
      oneof value {
        DateTime date_time = 1;
        Period period = 2;
        Duration duration = 3;
      }
    }
    Value value = 4 [(is_choice_type) = true];
  }
  repeated DateFilter date_filter = 7;
}

// A length - a value with a unit that is a physical distance
// See https://www.hl7.org/fhir/datatypes.html#Distance
message Distance {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // Numerical value (with implicit precision)
  Decimal value = 3;

  // < | <= | >= | > - how to understand the value
  QuantityComparatorCode comparator = 4;

  // Unit representation
  String unit = 5;

  // System that defines coded unit form
  Uri system = 6;

  // Coded form of the unit
  Code code = 7;
}

// How the medication is/was taken or should be taken
// See https://www.hl7.org/fhir/datatypes.html#Dosage
message Dosage {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // The order of the dosage instructions
  Integer sequence = 3;

  // Free text dosage instructions e.g. SIG
  String text = 4;

  // Supplemental instruction - e.g. "with meals"
  repeated CodeableConcept additional_instruction = 5;

  // Patient or consumer oriented instructions
  String patient_instruction = 6;

  // When medication should be administered
  Timing timing = 7;

  // Take "as needed" (for x)
  message AsNeeded {
    oneof as_needed {
      Boolean boolean = 1;
      CodeableConcept codeable_concept = 2;
    }
  }
  AsNeeded as_needed = 8 [(is_choice_type) = true];

  // Body site to administer to
  CodeableConcept site = 9;

  // How drug should enter body
  CodeableConcept route = 10;

  // Technique for administering medication
  CodeableConcept method = 11;

  // Amount of medication per dose
  message Dose {
    oneof dose {
      Range range = 1;
      Quantity quantity = 2;
    }
  }
  Dose dose = 12 [(is_choice_type) = true];

  // Upper limit on medication per unit of time
  Ratio max_dose_per_period = 13;

  // Upper limit on medication per administration
  Quantity max_dose_per_administration = 14;

  // Upper limit on medication per lifetime of the patient
  Quantity max_dose_per_lifetime = 15;

  // Amount of medication per unit of time
  message Rate {
    oneof rate {
      Ratio ratio = 1;
      Range range = 2;
      Quantity quantity = 3;
    }
  }
  Rate rate = 16 [(is_choice_type) = true];
}

// A length of time
// See https://www.hl7.org/fhir/datatypes.html#Duration
message Duration {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // Numerical value (with implicit precision)
  Decimal value = 3;

  // < | <= | >= | > - how to understand the value
  QuantityComparatorCode comparator = 4;

  // Unit representation
  String unit = 5;

  // System that defines coded unit form
  Uri system = 6;

  // Coded form of the unit
  Code code = 7;
}

// Definition of an element in a resource or extension
// See https://www.hl7.org/fhir/datatypes.html#ElementDefinition
message ElementDefinition {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // Path of the element in the hierarchy of elements
  String path = 3 [(validation_requirement) = REQUIRED_BY_FHIR];

  // xmlAttr | xmlText | typeAttr | cdaText | xhtml
  repeated PropertyRepresentationCode representation = 4;

  // Name for this particular element (in a set of slices)
  String slice_name = 5;

  // Name for element to display with or prompt for element
  String label = 6;

  // Corresponding codes in terminologies
  repeated Coding code = 7;

  // This element is sliced - slices follow
  message Slicing {
    // xml:id (or equivalent in JSON)
    String id = 1;

    // Additional Content defined by implementations
    repeated Extension extension = 2;

    // Element values that are used to distinguish the slices
    message Discriminator {
      // xml:id (or equivalent in JSON)
      String id = 1;

      // Additional Content defined by implementations
      repeated Extension extension = 2;

      // value | exists | pattern | type | profile
      DiscriminatorTypeCode type = 3
          [(validation_requirement) = REQUIRED_BY_FHIR];

      // Path to element value
      String path = 4 [(validation_requirement) = REQUIRED_BY_FHIR];
    }
    repeated Discriminator discriminator = 3;

    // Text description of how slicing works (or not)
    String description = 4;

    // If elements must be in same order as slices
    Boolean ordered = 5;

    // closed | open | openAtEnd
    SlicingRulesCode rules = 6 [(validation_requirement) = REQUIRED_BY_FHIR];
  }
  Slicing slicing = 8;

  // Concise definition for space-constrained presentation
  String short = 9;

  // Full formal definition as narrative text
  Markdown definition = 10;

  // Comments about the use of this element
  Markdown comment = 11;

  // Why this resource has been created
  Markdown requirements = 12;

  // Other names
  repeated String alias = 13;

  // Minimum Cardinality
  UnsignedInt min = 14;

  // Maximum Cardinality (a number or *)
  String max = 15;

  // Base definition information for tools
  message Base {
    // xml:id (or equivalent in JSON)
    String id = 1;

    // Additional Content defined by implementations
    repeated Extension extension = 2;

    // Path that identifies the base element
    String path = 3 [(validation_requirement) = REQUIRED_BY_FHIR];

    // Min cardinality of the base element
    UnsignedInt min = 4 [(validation_requirement) = REQUIRED_BY_FHIR];

    // Max cardinality of the base element
    String max = 5 [(validation_requirement) = REQUIRED_BY_FHIR];
  }
  Base base = 16;

  // Reference to definition of content for the element
  Uri content_reference = 17;

  // Data type and Profile for this element
  message TypeRef {
    // xml:id (or equivalent in JSON)
    String id = 1;

    // Additional Content defined by implementations
    repeated Extension extension = 2;

    // Data type or Resource (reference to definition)
    Uri code = 3 [(validation_requirement) = REQUIRED_BY_FHIR];

    // Profile (StructureDefinition) to apply (or IG)
    Uri profile = 4;

    // Profile (StructureDefinition) to apply to reference target (or IG)
    Uri target_profile = 5;

    // contained | referenced | bundled - how aggregated
    repeated AggregationModeCode aggregation = 6;

    // either | independent | specific
    ReferenceVersionRulesCode versioning = 7;
  }
  repeated TypeRef type = 18;

  // Specified value if missing from instance
  message DefaultValue {
    oneof default_value {
      Base64Binary base64_binary = 1;
      Boolean boolean = 2;
      Code code = 3;
      Date date = 4;
      DateTime date_time = 5;
      Decimal decimal = 6;
      Id id = 7;
      Instant instant = 8;
      Integer integer = 9;
      Markdown markdown = 10;
      Oid oid = 11;
      PositiveInt positive_int = 12;
      String string_value = 13 [json_name = "string"];
      Time time = 14;
      UnsignedInt unsigned_int = 15;
      Uri uri = 16;
      Address address = 17;
      Age age = 18;
      Annotation annotation = 19;
      Attachment attachment = 20;
      CodeableConcept codeable_concept = 21;
      Coding coding = 22;
      ContactPoint contact_point = 23;
      Count count = 24;
      Distance distance = 25;
      Duration duration = 26;
      HumanName human_name = 27;
      Identifier identifier = 28;
      Money money = 29;
      Period period = 30;
      Quantity quantity = 31;
      Range range = 32;
      Ratio ratio = 33;
      Reference reference = 34;
      SampledData sampled_data = 35;
      Signature signature = 36;
      Timing timing = 37;
      Meta meta = 38;
    }
  }
  DefaultValue default_value = 19 [(is_choice_type) = true];

  // Implicit meaning when this element is missing
  Markdown meaning_when_missing = 20;

  // What the order of the elements means
  String order_meaning = 21;

  // Value must be exactly this
  message Fixed {
    oneof fixed {
      Base64Binary base64_binary = 1;
      Boolean boolean = 2;
      Code code = 3;
      Date date = 4;
      DateTime date_time = 5;
      Decimal decimal = 6;
      Id id = 7;
      Instant instant = 8;
      Integer integer = 9;
      Markdown markdown = 10;
      Oid oid = 11;
      PositiveInt positive_int = 12;
      String string_value = 13 [json_name = "string"];
      Time time = 14;
      UnsignedInt unsigned_int = 15;
      Uri uri = 16;
      Address address = 17;
      Age age = 18;
      Annotation annotation = 19;
      Attachment attachment = 20;
      CodeableConcept codeable_concept = 21;
      Coding coding = 22;
      ContactPoint contact_point = 23;
      Count count = 24;
      Distance distance = 25;
      Duration duration = 26;
      HumanName human_name = 27;
      Identifier identifier = 28;
      Money money = 29;
      Period period = 30;
      Quantity quantity = 31;
      Range range = 32;
      Ratio ratio = 33;
      Reference reference = 34;
      SampledData sampled_data = 35;
      Signature signature = 36;
      Timing timing = 37;
      Meta meta = 38;
    }
  }
  Fixed fixed = 22 [(is_choice_type) = true];

  // Value must have at least these property values
  message Pattern {
    oneof pattern {
      Base64Binary base64_binary = 1;
      Boolean boolean = 2;
      Code code = 3;
      Date date = 4;
      DateTime date_time = 5;
      Decimal decimal = 6;
      Id id = 7;
      Instant instant = 8;
      Integer integer = 9;
      Markdown markdown = 10;
      Oid oid = 11;
      PositiveInt positive_int = 12;
      String string_value = 13 [json_name = "string"];
      Time time = 14;
      UnsignedInt unsigned_int = 15;
      Uri uri = 16;
      Address address = 17;
      Age age = 18;
      Annotation annotation = 19;
      Attachment attachment = 20;
      CodeableConcept codeable_concept = 21;
      Coding coding = 22;
      ContactPoint contact_point = 23;
      Count count = 24;
      Distance distance = 25;
      Duration duration = 26;
      HumanName human_name = 27;
      Identifier identifier = 28;
      Money money = 29;
      Period period = 30;
      Quantity quantity = 31;
      Range range = 32;
      Ratio ratio = 33;
      Reference reference = 34;
      SampledData sampled_data = 35;
      Signature signature = 36;
      Timing timing = 37;
      Meta meta = 38;
    }
  }
  Pattern pattern = 23 [(is_choice_type) = true];

  // Example value (as defined for type)
  message Example {
    // xml:id (or equivalent in JSON)
    String id = 1;

    // Additional Content defined by implementations
    repeated Extension extension = 2;

    // Describes the purpose of this example
    String label = 3 [(validation_requirement) = REQUIRED_BY_FHIR];

    // Value of Example (one of allowed types)
    message Value {
      oneof value {
        option (oneof_validation_requirement) = REQUIRED_BY_FHIR;
        Base64Binary base64_binary = 1;
        Boolean boolean = 2;
        Code code = 3;
        Date date = 4;
        DateTime date_time = 5;
        Decimal decimal = 6;
        Id id = 7;
        Instant instant = 8;
        Integer integer = 9;
        Markdown markdown = 10;
        Oid oid = 11;
        PositiveInt positive_int = 12;
        String string_value = 13 [json_name = "string"];
        Time time = 14;
        UnsignedInt unsigned_int = 15;
        Uri uri = 16;
        Address address = 17;
        Age age = 18;
        Annotation annotation = 19;
        Attachment attachment = 20;
        CodeableConcept codeable_concept = 21;
        Coding coding = 22;
        ContactPoint contact_point = 23;
        Count count = 24;
        Distance distance = 25;
        Duration duration = 26;
        HumanName human_name = 27;
        Identifier identifier = 28;
        Money money = 29;
        Period period = 30;
        Quantity quantity = 31;
        Range range = 32;
        Ratio ratio = 33;
        Reference reference = 34;
        SampledData sampled_data = 35;
        Signature signature = 36;
        Timing timing = 37;
        Meta meta = 38;
      }
    }
    Value value = 4
        [(is_choice_type) = true, (validation_requirement) = REQUIRED_BY_FHIR];
  }
  repeated Example example = 24;

  // Minimum Allowed Value (for some types)
  message MinValue {
    oneof min_value {
      Date date = 1;
      DateTime date_time = 2;
      Instant instant = 3;
      Time time = 4;
      Decimal decimal = 5;
      Integer integer = 6;
      PositiveInt positive_int = 7;
      UnsignedInt unsigned_int = 8;
      Quantity quantity = 9;
    }
  }
  MinValue min_value = 25 [(is_choice_type) = true];

  // Maximum Allowed Value (for some types)
  message MaxValue {
    oneof max_value {
      Date date = 1;
      DateTime date_time = 2;
      Instant instant = 3;
      Time time = 4;
      Decimal decimal = 5;
      Integer integer = 6;
      PositiveInt positive_int = 7;
      UnsignedInt unsigned_int = 8;
      Quantity quantity = 9;
    }
  }
  MaxValue max_value = 26 [(is_choice_type) = true];

  // Max length for strings
  Integer max_length = 27;

  // Reference to invariant about presence
  repeated Id condition = 28;

  // Condition that must evaluate to true
  message Constraint {
    // xml:id (or equivalent in JSON)
    String id = 1;

    // Additional Content defined by implementations
    repeated Extension extension = 2;

    // Target of 'condition' reference above
    Id key = 3 [(validation_requirement) = REQUIRED_BY_FHIR];

    // Why this constraint is necessary or appropriate
    String requirements = 4;

    // error | warning
    ConstraintSeverityCode severity = 5
        [(validation_requirement) = REQUIRED_BY_FHIR];

    // Human description of constraint
    String human = 6 [(validation_requirement) = REQUIRED_BY_FHIR];

    // FHIRPath expression of constraint
    String expression = 7 [(validation_requirement) = REQUIRED_BY_FHIR];

    // XPath expression of constraint
    String xpath = 8;

    // Reference to original source of constraint
    Uri source = 9;
  }
  repeated Constraint constraint = 29;

  // If the element must supported
  Boolean must_support = 30;

  // If this modifies the meaning of other elements
  Boolean is_modifier = 31;

  // Include when _summary = true?
  Boolean is_summary = 32;

  // ValueSet details if this is coded
  message ElementDefinitionBinding {
    // xml:id (or equivalent in JSON)
    String id = 1;

    // Additional Content defined by implementations
    repeated Extension extension = 2;

    // required | extensible | preferred | example
    BindingStrengthCode strength = 3
        [(validation_requirement) = REQUIRED_BY_FHIR];

    // Human explanation of the value set
    String description = 4;

    // Source of value set
    message ValueSet {
      oneof value_set {
        Uri uri = 1;
        Reference reference = 2;
      }
    }
    ValueSet value_set = 5 [(is_choice_type) = true];
  }
  ElementDefinitionBinding binding = 33;

  // Map element to another set of definitions
  message Mapping {
    // xml:id (or equivalent in JSON)
    String id = 1;

    // Additional Content defined by implementations
    repeated Extension extension = 2;

    // Reference to mapping declaration
    Id identity = 3 [(validation_requirement) = REQUIRED_BY_FHIR];

    // Computable language of mapping
    MimeTypeCode language = 4;

    // Details of the mapping
    String map = 5 [(validation_requirement) = REQUIRED_BY_FHIR];

    // Comments about the mapping or its use
    String comment = 6;
  }
  repeated Mapping mapping = 34;
}

// Base for all elements
// See https://www.hl7.org/fhir/datatypes.html#Element
message Element {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;
}

// Optional Extensions Element
// See https://www.hl7.org/fhir/datatypes.html#Extension
message Extension {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // identifies the meaning of the extension
  Uri url = 2 [(validation_requirement) = REQUIRED_BY_FHIR];

  // Value of extension
  message Value {
    oneof value {
      Base64Binary base64_binary = 1;
      Boolean boolean = 2;
      Code code = 3;
      Date date = 4;
      DateTime date_time = 5;
      Decimal decimal = 6;
      Id id = 7;
      Instant instant = 8;
      Integer integer = 9;
      Markdown markdown = 10;
      Oid oid = 11;
      PositiveInt positive_int = 12;
      String string_value = 13 [json_name = "string"];
      Time time = 14;
      UnsignedInt unsigned_int = 15;
      Uri uri = 16;
      Address address = 17;
      Age age = 18;
      Annotation annotation = 19;
      Attachment attachment = 20;
      CodeableConcept codeable_concept = 21;
      Coding coding = 22;
      ContactPoint contact_point = 23;
      Count count = 24;
      Distance distance = 25;
      Duration duration = 26;
      HumanName human_name = 27;
      Identifier identifier = 28;
      Money money = 29;
      Period period = 30;
      Quantity quantity = 31;
      Range range = 32;
      Ratio ratio = 33;
      Reference reference = 34;
      SampledData sampled_data = 35;
      Signature signature = 36;
      Timing timing = 37;
      Meta meta = 38;
    }
  }
  Value value = 3 [(is_choice_type) = true];

  // Additional Content defined by implementations
  repeated Extension extension = 4;
}

// Name of a human - parts and usage
// See https://www.hl7.org/fhir/datatypes.html#HumanName
message HumanName {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // usual | official | temp | nickname | anonymous | old | maiden
  NameUseCode use = 3;

  // Text representation of the full name
  String text = 4;

  // Family name (often called 'Surname')
  String family = 5;

  // Given names (not always 'first'). Includes middle names
  repeated String given = 6;

  // Parts that come before the name
  repeated String prefix = 7;

  // Parts that come after the name
  repeated String suffix = 8;

  // Time period when name was/is in use
  Period period = 9;
}

// An identifier intended for computation
// See https://www.hl7.org/fhir/datatypes.html#Identifier
message Identifier {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // usual | official | temp | secondary (If known)
  IdentifierUseCode use = 3;

  // Description of identifier
  CodeableConcept type = 4;

  // The namespace for the identifier value
  Uri system = 5;

  // The value that is unique
  String value = 6;

  // Time period when id is/was valid for use
  Period period = 7;

  // Organization that issued id (may be just text)
  Reference assigner = 8;
}

// Metadata about a resource
// See https://www.hl7.org/fhir/datatypes.html#Meta
message Meta {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // Version specific identifier
  Id version_id = 3;

  // When the resource version last changed
  Instant last_updated = 4;

  // Profiles this resource claims to conform to
  repeated Uri profile = 5;

  // Security Labels applied to this resource
  repeated Coding security = 6;

  // Tags applied to this resource
  repeated Coding tag = 7;
}

// An amount of economic utility in some recognized currency
// See https://www.hl7.org/fhir/datatypes.html#Money
message Money {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // Numerical value (with implicit precision)
  Decimal value = 3;

  // < | <= | >= | > - how to understand the value
  QuantityComparatorCode comparator = 4;

  // Unit representation
  String unit = 5;

  // System that defines coded unit form
  Uri system = 6;

  // Coded form of the unit
  Code code = 7;
}

// A human-readable formatted text, including images
// See https://www.hl7.org/fhir/datatypes.html#Narrative
message Narrative {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // generated | extensions | additional | empty
  NarrativeStatusCode status = 3 [(validation_requirement) = REQUIRED_BY_FHIR];

  // Limited xhtml content
  String div = 4 [(validation_requirement) = REQUIRED_BY_FHIR];
}

// Definition of a parameter to a module
// See https://www.hl7.org/fhir/datatypes.html#ParameterDefinition
message ParameterDefinition {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // Name used to access the parameter value
  Code name = 3;

  // in | out
  OperationParameterUseCode use = 4
      [(validation_requirement) = REQUIRED_BY_FHIR];

  // Minimum cardinality
  Integer min = 5;

  // Maximum cardinality (a number of *)
  String max = 6;

  // A brief description of the parameter
  String documentation = 7;

  // What type of value
  FHIRAllTypesCode type = 8 [(validation_requirement) = REQUIRED_BY_FHIR];

  // What profile the value is expected to be
  Reference profile = 9;
}

// Time range defined by start and end date/time
// See https://www.hl7.org/fhir/datatypes.html#Period
message Period {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // Starting time with inclusive boundary
  DateTime start = 3;

  // End time with inclusive boundary, if not ongoing
  DateTime end = 4;
}

// A measured or measurable amount
// See https://www.hl7.org/fhir/datatypes.html#Quantity
message Quantity {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // Numerical value (with implicit precision)
  Decimal value = 3;

  // < | <= | >= | > - how to understand the value
  QuantityComparatorCode comparator = 4;

  // Unit representation
  String unit = 5;

  // System that defines coded unit form
  Uri system = 6;

  // Coded form of the unit
  Code code = 7;
}

// Set of values bounded by low and high
// See https://www.hl7.org/fhir/datatypes.html#Range
message Range {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // Low limit
  Quantity low = 3;

  // High limit
  Quantity high = 4;
}

// A ratio of two Quantity values - a numerator and a denominator
// See https://www.hl7.org/fhir/datatypes.html#Ratio
message Ratio {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // Numerator value
  Quantity numerator = 3;

  // Denominator value
  Quantity denominator = 4;
}

message ReferenceId {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;
  // Primitive value for id
  string value = 1;

  // History version, if present.
  Id history = 2;

  // xml:id (or equivalent in JSON)
  String id = 3;

  // Additional Content defined by implementations
  repeated Extension extension = 4;
}

// A reference from one resource to another
// See https://www.hl7.org/fhir/datatypes.html#Reference
message Reference {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;
  option (fhir_reference_type) = "Resource";

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // Literal reference, Relative, internal or absolute URL
  oneof reference {
    // Absolute URIs are untyped.
    String uri = 3 [json_name = "reference"];

    // Fragments (internal references) are untyped, and represented here
    // without the leading '#'.
    String fragment = 4;

    // Typed relative urls are represented here.
    ReferenceId account_id = 5;
    ReferenceId activity_definition_id = 6;
    ReferenceId adverse_event_id = 7;
    ReferenceId allergy_intolerance_id = 8;
    ReferenceId appointment_id = 9;
    ReferenceId appointment_response_id = 10;
    ReferenceId audit_event_id = 11;
    ReferenceId basic_id = 12;
    ReferenceId binary_id = 13;
    ReferenceId body_site_id = 14;
    ReferenceId bundle_id = 15;
    ReferenceId capability_statement_id = 16;
    ReferenceId care_plan_id = 17;
    ReferenceId care_team_id = 18;
    ReferenceId charge_item_id = 19;
    ReferenceId claim_id = 20;
    ReferenceId claim_response_id = 21;
    ReferenceId clinical_impression_id = 22;
    ReferenceId code_system_id = 23;
    ReferenceId communication_id = 24;
    ReferenceId communication_request_id = 25;
    ReferenceId compartment_definition_id = 26;
    ReferenceId composition_id = 27;
    ReferenceId concept_map_id = 28;
    ReferenceId condition_id = 29;
    ReferenceId consent_id = 30;
    ReferenceId contract_id = 31;
    ReferenceId coverage_id = 32;
    ReferenceId data_element_id = 33;
    ReferenceId detected_issue_id = 34;
    ReferenceId device_id = 35;
    ReferenceId device_component_id = 36;
    ReferenceId device_metric_id = 37;
    ReferenceId device_request_id = 38;
    ReferenceId device_usestatement_id = 39;
    ReferenceId diagnostic_report_id = 40;
    ReferenceId document_manifest_id = 41;
    ReferenceId document_reference_id = 42;
    ReferenceId eligibility_request_id = 43;
    ReferenceId eligibility_response_id = 44;
    ReferenceId encounter_id = 45;
    ReferenceId endpoint_id = 46;
    ReferenceId enrollment_request_id = 47;
    ReferenceId enrollment_response_id = 48;
    ReferenceId episode_ofcare_id = 49;
    ReferenceId expansion_profile_id = 50;
    ReferenceId explanation_ofbenefit_id = 51;
    ReferenceId family_memberhistory_id = 52;
    ReferenceId flag_id = 53;
    ReferenceId goal_id = 54;
    ReferenceId graph_definition_id = 55;
    ReferenceId group_id = 56;
    ReferenceId guidance_response_id = 57;
    ReferenceId healthcare_service_id = 58;
    ReferenceId imaging_manifest_id = 59;
    ReferenceId imaging_study_id = 60;
    ReferenceId immunization_id = 61;
    ReferenceId immunization_recommendation_id = 62;
    ReferenceId implementation_guide_id = 63;
    ReferenceId library_id = 64;
    ReferenceId linkage_id = 65;
    ReferenceId list_id = 66;
    ReferenceId location_id = 67;
    ReferenceId measure_id = 68;
    ReferenceId measure_report_id = 69;
    ReferenceId media_id = 70;
    ReferenceId medication_id = 71;
    ReferenceId medication_administration_id = 72;
    ReferenceId medication_dispense_id = 73;
    ReferenceId medication_request_id = 74;
    ReferenceId medication_statement_id = 75;
    ReferenceId message_definition_id = 76;
    ReferenceId message_header_id = 77;
    ReferenceId naming_system_id = 78;
    ReferenceId nutrition_order_id = 79;
    ReferenceId observation_id = 80;
    ReferenceId operation_definition_id = 81;
    ReferenceId operation_outcome_id = 82;
    ReferenceId organization_id = 83;
    ReferenceId parameters_id = 84;
    ReferenceId patient_id = 85;
    ReferenceId payment_notice_id = 86;
    ReferenceId payment_reconciliation_id = 87;
    ReferenceId person_id = 88;
    ReferenceId plan_definition_id = 89;
    ReferenceId practitioner_id = 90;
    ReferenceId practitioner_role_id = 91;
    ReferenceId procedure_id = 92;
    ReferenceId procedure_request_id = 93;
    ReferenceId process_request_id = 94;
    ReferenceId process_response_id = 95;
    ReferenceId provenance_id = 96;
    ReferenceId questionnaire_id = 97;
    ReferenceId questionnaire_response_id = 98;
    ReferenceId referral_request_id = 99;
    ReferenceId related_person_id = 100;
    ReferenceId request_group_id = 101;
    ReferenceId research_study_id = 102;
    ReferenceId research_subject_id = 103;
    ReferenceId risk_assessment_id = 104;
    ReferenceId schedule_id = 105;
    ReferenceId search_parameter_id = 106;
    ReferenceId sequence_id = 107;
    ReferenceId service_definition_id = 108;
    ReferenceId slot_id = 109;
    ReferenceId specimen_id = 110;
    ReferenceId structure_definition_id = 111;
    ReferenceId structure_map_id = 112;
    ReferenceId subscription_id = 113;
    ReferenceId substance_id = 114;
    ReferenceId supply_delivery_id = 115;
    ReferenceId supply_request_id = 116;
    ReferenceId task_id = 117;
    ReferenceId test_report_id = 118;
    ReferenceId test_script_id = 119;
    ReferenceId value_set_id = 120;
    ReferenceId vision_prescription_id = 121;
  }

  // Logical reference, when literal reference is not known
  Identifier identifier = 122;

  // Text alternative for the resource
  String display = 123;
}

// Related artifacts for a knowledge resource
// See https://www.hl7.org/fhir/datatypes.html#RelatedArtifact
message RelatedArtifact {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // documentation | justification | citation | predecessor | successor |
  // derived-from | depends-on | composed-of
  RelatedArtifactTypeCode type = 3
      [(validation_requirement) = REQUIRED_BY_FHIR];

  // Brief description of the related artifact
  String display = 4;

  // Bibliographic citation for the artifact
  String citation = 5;

  // Where the artifact can be accessed
  Uri url = 6;

  // What document is being referenced
  Attachment document = 7;

  // What resource is being referenced
  Reference resource = 8;
}

// A series of measurements taken by a device
// See https://www.hl7.org/fhir/datatypes.html#SampledData
message SampledData {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // Zero value and units
  Quantity origin = 3 [(validation_requirement) = REQUIRED_BY_FHIR];

  // Number of milliseconds between samples
  Decimal period = 4 [(validation_requirement) = REQUIRED_BY_FHIR];

  // Multiply data by this before adding to origin
  Decimal factor = 5;

  // Lower limit of detection
  Decimal lower_limit = 6;

  // Upper limit of detection
  Decimal upper_limit = 7;

  // Number of sample points at each time point
  PositiveInt dimensions = 8 [(validation_requirement) = REQUIRED_BY_FHIR];

  // Decimal values with spaces, or "E" | "U" | "L"
  String data = 9 [(validation_requirement) = REQUIRED_BY_FHIR];
}

// A digital Signature - XML DigSig, JWT, Graphical image of signature, etc.
// See https://www.hl7.org/fhir/datatypes.html#Signature
message Signature {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // Indication of the reason the entity signed the object(s)
  repeated Coding type = 3 [(validation_requirement) = REQUIRED_BY_FHIR];

  // When the signature was created
  Instant when = 4 [(validation_requirement) = REQUIRED_BY_FHIR];

  // Who signed
  message Who {
    oneof who {
      option (oneof_validation_requirement) = REQUIRED_BY_FHIR;
      Uri uri = 1;
      Reference reference = 2;
    }
  }
  Who who = 5
      [(is_choice_type) = true, (validation_requirement) = REQUIRED_BY_FHIR];

  // The party represented
  message OnBehalfOf {
    oneof on_behalf_of {
      Uri uri = 1;
      Reference reference = 2;
    }
  }
  OnBehalfOf on_behalf_of = 6 [(is_choice_type) = true];

  // The technical format of the signature
  MimeTypeCode content_type = 7;

  // The actual signature content (XML DigSig. JWT, picture, etc.)
  Base64Binary blob = 8;
}

// A timing schedule that specifies an event that may occur multiple times
// See https://www.hl7.org/fhir/datatypes.html#Timing
message Timing {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // When the event occurs
  repeated DateTime event = 3;

  // When the event is to occur
  message Repeat {
    // xml:id (or equivalent in JSON)
    String id = 1;

    // Additional Content defined by implementations
    repeated Extension extension = 2;

    // Length/Range of lengths, or (Start and/or end) limits
    message Bounds {
      oneof bounds {
        Duration duration = 1;
        Range range = 2;
        Period period = 3;
      }
    }
    Bounds bounds = 3 [(is_choice_type) = true];

    // Number of times to repeat
    Integer count = 4;

    // Maximum number of times to repeat
    Integer count_max = 5;

    // How long when it happens
    Decimal duration = 6;

    // How long when it happens (Max)
    Decimal duration_max = 7;

    // s | min | h | d | wk | mo | a - unit of time (UCUM)
    UnitsOfTimeCode duration_unit = 8;

    // Event occurs frequency times per period
    Integer frequency = 9;

    // Event occurs up to frequencyMax times per period
    Integer frequency_max = 10;

    // Event occurs frequency times per period
    Decimal period = 11;

    // Upper limit of period (3-4 hours)
    Decimal period_max = 12;

    // s | min | h | d | wk | mo | a - unit of time (UCUM)
    UnitsOfTimeCode period_unit = 13;

    // mon | tue | wed | thu | fri | sat | sun
    repeated DaysOfWeekCode day_of_week = 14;

    // Time of day for action
    repeated Time time_of_day = 15;

    // Regular life events the event is tied to
    repeated EventTimingCode when = 16;

    // Minutes from event (before or after)
    UnsignedInt offset = 17;
  }
  Repeat repeat = 4;

  // BID | TID | QID | AM | PM | QD | QOD | Q4H | Q6H +
  CodeableConcept code = 5;
}

// Defines an expected trigger for a module
// See https://www.hl7.org/fhir/datatypes.html#TriggerDefinition
message TriggerDefinition {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // named-event | periodic | data-added | data-modified | data-removed |
  // data-accessed | data-access-ended
  TriggerTypeCode type = 3 [(validation_requirement) = REQUIRED_BY_FHIR];

  // Triggering event name
  String event_name = 4;

  // Timing of the event
  message EventTiming {
    oneof event_timing {
      Timing timing = 1;
      Reference reference = 2;
      Date date = 3;
      DateTime date_time = 4;
    }
  }
  EventTiming event_timing = 5 [(is_choice_type) = true];

  // Triggering data of the event
  DataRequirement event_data = 6;
}

// Describes the context of use for a conformance or knowledge resource
// See https://www.hl7.org/fhir/datatypes.html#UsageContext
message UsageContext {
  option (structure_definition_kind) = KIND_COMPLEX_TYPE;

  // xml:id (or equivalent in JSON)
  String id = 1;

  // Additional Content defined by implementations
  repeated Extension extension = 2;

  // Type of context being specified
  Coding code = 3 [(validation_requirement) = REQUIRED_BY_FHIR];

  // Value that defines the context
  message Value {
    oneof value {
      option (oneof_validation_requirement) = REQUIRED_BY_FHIR;
      CodeableConcept codeable_concept = 1;
      Quantity quantity = 2;
      Range range = 3;
    }
  }
  Value value = 4
      [(is_choice_type) = true, (validation_requirement) = REQUIRED_BY_FHIR];
}

// Base Resource
// See https://www.hl7.org/fhir/resource.html
message Resource {
  option (structure_definition_kind) = KIND_RESOURCE;
  // Logical id of this artifact
  Id id = 1;

  // Metadata about the resource
  Meta meta = 2;

  // A set of rules under which this content was created
  Uri implicit_rules = 3;

  // Language of the resource content
  Code language = 4;
};

// Code specializations with required valueset bindings, used by messages
// defined in this file. The majority of the code specializations are defined
// in other files, but these need to be here for technical reasons.

// The type of an address (physical / postal)
// See http://hl7.org/fhir/ValueSet/address-type
message AddressTypeCode {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;
  option (fhir_valueset_url) = "http://hl7.org/fhir/ValueSet/address-type";

  // Primitive value for code
  enum Value {
    INVALID_UNINITIALIZED = 0;
    POSTAL = 1;
    PHYSICAL = 2;
    BOTH = 3;
  }
  Value value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// The use of an address
// See http://hl7.org/fhir/ValueSet/address-use
message AddressUseCode {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;
  option (fhir_valueset_url) = "http://hl7.org/fhir/ValueSet/address-use";

  // Primitive value for code
  enum Value {
    INVALID_UNINITIALIZED = 0;
    HOME = 1;
    WORK = 2;
    TEMP = 3;
    OLD = 4;
  }
  Value value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// How resource references can be aggregated.
// See http://hl7.org/fhir/ValueSet/resource-aggregation-mode
message AggregationModeCode {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;
  option (fhir_valueset_url) =
      "http://hl7.org/fhir/ValueSet/resource-aggregation-mode";

  // Primitive value for code
  enum Value {
    INVALID_UNINITIALIZED = 0;
    CONTAINED = 1;
    REFERENCED = 2;
    BUNDLED = 3;
  }
  Value value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// Indication of the degree of conformance expectations associated with a
// binding. See http://hl7.org/fhir/ValueSet/binding-strength
message BindingStrengthCode {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;
  option (fhir_valueset_url) = "http://hl7.org/fhir/ValueSet/binding-strength";

  // Primitive value for code
  enum Value {
    INVALID_UNINITIALIZED = 0;
    REQUIRED = 1;
    EXTENSIBLE = 2;
    PREFERRED = 3;
    EXAMPLE = 4;
  }
  Value value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// SHALL applications comply with this constraint?
// See http://hl7.org/fhir/ValueSet/constraint-severity
message ConstraintSeverityCode {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;
  option (fhir_valueset_url) =
      "http://hl7.org/fhir/ValueSet/constraint-severity";

  // Primitive value for code
  enum Value {
    INVALID_UNINITIALIZED = 0;
    ERROR = 1;
    WARNING = 2;
  }
  Value value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// Telecommunications form for contact point
// See http://hl7.org/fhir/ValueSet/contact-point-system
message ContactPointSystemCode {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;
  option (fhir_valueset_url) =
      "http://hl7.org/fhir/ValueSet/contact-point-system";

  // Primitive value for code
  enum Value {
    INVALID_UNINITIALIZED = 0;
    PHONE = 1;
    FAX = 2;
    EMAIL = 3;
    PAGER = 4;
    URL = 5;
    SMS = 6;
    OTHER = 7;
  }
  Value value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// Use of contact point
// See http://hl7.org/fhir/ValueSet/contact-point-use
message ContactPointUseCode {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;
  option (fhir_valueset_url) = "http://hl7.org/fhir/ValueSet/contact-point-use";

  // Primitive value for code
  enum Value {
    INVALID_UNINITIALIZED = 0;
    HOME = 1;
    WORK = 2;
    TEMP = 3;
    OLD = 4;
    MOBILE = 5;
  }
  Value value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// The type of contributor
// See http://hl7.org/fhir/ValueSet/contributor-type
message ContributorTypeCode {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;
  option (fhir_valueset_url) = "http://hl7.org/fhir/ValueSet/contributor-type";

  // Primitive value for code
  enum Value {
    INVALID_UNINITIALIZED = 0;
    AUTHOR = 1;
    EDITOR = 2;
    REVIEWER = 3;
    ENDORSER = 4;
  }
  Value value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// The days of the week.
// See http://hl7.org/fhir/ValueSet/days-of-week
message DaysOfWeekCode {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;
  option (fhir_valueset_url) = "http://hl7.org/fhir/ValueSet/days-of-week";

  // Primitive value for code
  enum Value {
    INVALID_UNINITIALIZED = 0;
    MON = 1;
    TUE = 2;
    WED = 3;
    THU = 4;
    FRI = 5;
    SAT = 6;
    SUN = 7;
  }
  Value value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// How an element value is interpreted when discrimination is evaluated
// See http://hl7.org/fhir/ValueSet/discriminator-type
message DiscriminatorTypeCode {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;
  option (fhir_valueset_url) =
      "http://hl7.org/fhir/ValueSet/discriminator-type";

  // Primitive value for code
  enum Value {
    INVALID_UNINITIALIZED = 0;
    VALUE = 1;
    EXISTS = 2;
    PATTERN = 3;
    TYPE = 4;
    PROFILE = 5;
  }
  Value value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// Real world event relating to the schedule.
// See http://hl7.org/fhir/ValueSet/event-timing
message EventTimingCode {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;
  option (fhir_valueset_url) = "http://hl7.org/fhir/ValueSet/event-timing";

  // Primitive value for code
  enum Value {
    INVALID_UNINITIALIZED = 0;
    MORN = 1 [(fhir_original_code) = "MORN"];
    AFT = 2 [(fhir_original_code) = "AFT"];
    EVE = 3 [(fhir_original_code) = "EVE"];
    NIGHT = 4 [(fhir_original_code) = "NIGHT"];
    PHS = 5 [(fhir_original_code) = "PHS"];
    HS = 6 [(fhir_original_code) = "HS"];
    WAKE = 7 [(fhir_original_code) = "WAKE"];
    C = 8 [(fhir_original_code) = "C"];
    CM = 9 [(fhir_original_code) = "CM"];
    CD = 10 [(fhir_original_code) = "CD"];
    CV = 11 [(fhir_original_code) = "CV"];
    AC = 12 [(fhir_original_code) = "AC"];
    ACM = 13 [(fhir_original_code) = "ACM"];
    ACD = 14 [(fhir_original_code) = "ACD"];
    ACV = 15 [(fhir_original_code) = "ACV"];
    PC = 16 [(fhir_original_code) = "PC"];
    PCM = 17 [(fhir_original_code) = "PCM"];
    PCD = 18 [(fhir_original_code) = "PCD"];
    PCV = 19 [(fhir_original_code) = "PCV"];
  }
  Value value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// Either an abstract type, a resource or a data type.
// See http://hl7.org/fhir/ValueSet/all-types
message FHIRAllTypesCode {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;
  option (fhir_valueset_url) = "http://hl7.org/fhir/ValueSet/all-types";

  // Primitive value for code
  enum Value {
    INVALID_UNINITIALIZED = 0;
    ADDRESS = 1 [(fhir_original_code) = "Address"];
    AGE = 2 [(fhir_original_code) = "Age"];
    ANNOTATION = 3 [(fhir_original_code) = "Annotation"];
    ATTACHMENT = 4 [(fhir_original_code) = "Attachment"];
    BACKBONE_ELEMENT = 5 [(fhir_original_code) = "BackboneElement"];
    CODEABLE_CONCEPT = 6 [(fhir_original_code) = "CodeableConcept"];
    CODING = 7 [(fhir_original_code) = "Coding"];
    CONTACT_DETAIL = 8 [(fhir_original_code) = "ContactDetail"];
    CONTACT_POINT = 9 [(fhir_original_code) = "ContactPoint"];
    CONTRIBUTOR = 10 [(fhir_original_code) = "Contributor"];
    COUNT = 11 [(fhir_original_code) = "Count"];
    DATA_REQUIREMENT = 12 [(fhir_original_code) = "DataRequirement"];
    DISTANCE = 13 [(fhir_original_code) = "Distance"];
    DOSAGE = 14 [(fhir_original_code) = "Dosage"];
    DURATION = 15 [(fhir_original_code) = "Duration"];
    ELEMENT = 16 [(fhir_original_code) = "Element"];
    ELEMENT_DEFINITION = 17 [(fhir_original_code) = "ElementDefinition"];
    EXTENSION = 18 [(fhir_original_code) = "Extension"];
    HUMAN_NAME = 19 [(fhir_original_code) = "HumanName"];
    IDENTIFIER = 20 [(fhir_original_code) = "Identifier"];
    META = 21 [(fhir_original_code) = "Meta"];
    MONEY = 22 [(fhir_original_code) = "Money"];
    NARRATIVE = 23 [(fhir_original_code) = "Narrative"];
    PARAMETER_DEFINITION = 24 [(fhir_original_code) = "ParameterDefinition"];
    PERIOD = 25 [(fhir_original_code) = "Period"];
    QUANTITY = 26 [(fhir_original_code) = "Quantity"];
    RANGE = 27 [(fhir_original_code) = "Range"];
    RATIO = 28 [(fhir_original_code) = "Ratio"];
    REFERENCE = 29 [(fhir_original_code) = "Reference"];
    RELATED_ARTIFACT = 30 [(fhir_original_code) = "RelatedArtifact"];
    SAMPLED_DATA = 31 [(fhir_original_code) = "SampledData"];
    SIGNATURE = 32 [(fhir_original_code) = "Signature"];
    SIMPLE_QUANTITY = 33 [(fhir_original_code) = "SimpleQuantity"];
    TIMING = 34 [(fhir_original_code) = "Timing"];
    TRIGGER_DEFINITION = 35 [(fhir_original_code) = "TriggerDefinition"];
    USAGE_CONTEXT = 36 [(fhir_original_code) = "UsageContext"];
    BASE64_BINARY = 37 [(fhir_original_code) = "base64Binary"];
    BOOLEAN = 38;
    CODE = 39;
    DATE = 40;
    DATE_TIME = 41 [(fhir_original_code) = "dateTime"];
    DECIMAL = 42;
    ID = 43;
    INSTANT = 44;
    INTEGER = 45;
    MARKDOWN = 46;
    OID = 47;
    POSITIVE_INT = 48 [(fhir_original_code) = "positiveInt"];
    STRING = 49;
    TIME = 50;
    UNSIGNED_INT = 51 [(fhir_original_code) = "unsignedInt"];
    URI = 52;
    UUID = 53;
    XHTML = 54;
    ACCOUNT = 55 [(fhir_original_code) = "Account"];
    ACTIVITY_DEFINITION = 56 [(fhir_original_code) = "ActivityDefinition"];
    ADVERSE_EVENT = 57 [(fhir_original_code) = "AdverseEvent"];
    ALLERGY_INTOLERANCE = 58 [(fhir_original_code) = "AllergyIntolerance"];
    APPOINTMENT = 59 [(fhir_original_code) = "Appointment"];
    APPOINTMENT_RESPONSE = 60 [(fhir_original_code) = "AppointmentResponse"];
    AUDIT_EVENT = 61 [(fhir_original_code) = "AuditEvent"];
    BASIC = 62 [(fhir_original_code) = "Basic"];
    BINARY = 63 [(fhir_original_code) = "Binary"];
    BODY_SITE = 64 [(fhir_original_code) = "BodySite"];
    BUNDLE = 65 [(fhir_original_code) = "Bundle"];
    CAPABILITY_STATEMENT = 66 [(fhir_original_code) = "CapabilityStatement"];
    CARE_PLAN = 67 [(fhir_original_code) = "CarePlan"];
    CARE_TEAM = 68 [(fhir_original_code) = "CareTeam"];
    CHARGE_ITEM = 69 [(fhir_original_code) = "ChargeItem"];
    CLAIM = 70 [(fhir_original_code) = "Claim"];
    CLAIM_RESPONSE = 71 [(fhir_original_code) = "ClaimResponse"];
    CLINICAL_IMPRESSION = 72 [(fhir_original_code) = "ClinicalImpression"];
    CODE_SYSTEM = 73 [(fhir_original_code) = "CodeSystem"];
    COMMUNICATION = 74 [(fhir_original_code) = "Communication"];
    COMMUNICATION_REQUEST = 75 [(fhir_original_code) = "CommunicationRequest"];
    COMPARTMENT_DEFINITION = 76
        [(fhir_original_code) = "CompartmentDefinition"];
    COMPOSITION = 77 [(fhir_original_code) = "Composition"];
    CONCEPT_MAP = 78 [(fhir_original_code) = "ConceptMap"];
    CONDITION = 79 [(fhir_original_code) = "Condition"];
    CONSENT = 80 [(fhir_original_code) = "Consent"];
    CONTRACT = 81 [(fhir_original_code) = "Contract"];
    COVERAGE = 82 [(fhir_original_code) = "Coverage"];
    DATA_ELEMENT = 83 [(fhir_original_code) = "DataElement"];
    DETECTED_ISSUE = 84 [(fhir_original_code) = "DetectedIssue"];
    DEVICE = 85 [(fhir_original_code) = "Device"];
    DEVICE_COMPONENT = 86 [(fhir_original_code) = "DeviceComponent"];
    DEVICE_METRIC = 87 [(fhir_original_code) = "DeviceMetric"];
    DEVICE_REQUEST = 88 [(fhir_original_code) = "DeviceRequest"];
    DEVICE_USE_STATEMENT = 89 [(fhir_original_code) = "DeviceUseStatement"];
    DIAGNOSTIC_REPORT = 90 [(fhir_original_code) = "DiagnosticReport"];
    DOCUMENT_MANIFEST = 91 [(fhir_original_code) = "DocumentManifest"];
    DOCUMENT_REFERENCE = 92 [(fhir_original_code) = "DocumentReference"];
    DOMAIN_RESOURCE = 93 [(fhir_original_code) = "DomainResource"];
    ELIGIBILITY_REQUEST = 94 [(fhir_original_code) = "EligibilityRequest"];
    ELIGIBILITY_RESPONSE = 95 [(fhir_original_code) = "EligibilityResponse"];
    ENCOUNTER = 96 [(fhir_original_code) = "Encounter"];
    ENDPOINT = 97 [(fhir_original_code) = "Endpoint"];
    ENROLLMENT_REQUEST = 98 [(fhir_original_code) = "EnrollmentRequest"];
    ENROLLMENT_RESPONSE = 99 [(fhir_original_code) = "EnrollmentResponse"];
    EPISODE_OF_CARE = 100 [(fhir_original_code) = "EpisodeOfCare"];
    EXPANSION_PROFILE = 101 [(fhir_original_code) = "ExpansionProfile"];
    EXPLANATION_OF_BENEFIT = 102
        [(fhir_original_code) = "ExplanationOfBenefit"];
    FAMILY_MEMBER_HISTORY = 103 [(fhir_original_code) = "FamilyMemberHistory"];
    FLAG = 104 [(fhir_original_code) = "Flag"];
    GOAL = 105 [(fhir_original_code) = "Goal"];
    GRAPH_DEFINITION = 106 [(fhir_original_code) = "GraphDefinition"];
    GROUP = 107 [(fhir_original_code) = "Group"];
    GUIDANCE_RESPONSE = 108 [(fhir_original_code) = "GuidanceResponse"];
    HEALTHCARE_SERVICE = 109 [(fhir_original_code) = "HealthcareService"];
    IMAGING_MANIFEST = 110 [(fhir_original_code) = "ImagingManifest"];
    IMAGING_STUDY = 111 [(fhir_original_code) = "ImagingStudy"];
    IMMUNIZATION = 112 [(fhir_original_code) = "Immunization"];
    IMMUNIZATION_RECOMMENDATION = 113
        [(fhir_original_code) = "ImmunizationRecommendation"];
    IMPLEMENTATION_GUIDE = 114 [(fhir_original_code) = "ImplementationGuide"];
    LIBRARY = 115 [(fhir_original_code) = "Library"];
    LINKAGE = 116 [(fhir_original_code) = "Linkage"];
    LIST = 117 [(fhir_original_code) = "List"];
    LOCATION = 118 [(fhir_original_code) = "Location"];
    MEASURE = 119 [(fhir_original_code) = "Measure"];
    MEASURE_REPORT = 120 [(fhir_original_code) = "MeasureReport"];
    MEDIA = 121 [(fhir_original_code) = "Media"];
    MEDICATION = 122 [(fhir_original_code) = "Medication"];
    MEDICATION_ADMINISTRATION = 123
        [(fhir_original_code) = "MedicationAdministration"];
    MEDICATION_DISPENSE = 124 [(fhir_original_code) = "MedicationDispense"];
    MEDICATION_REQUEST = 125 [(fhir_original_code) = "MedicationRequest"];
    MEDICATION_STATEMENT = 126 [(fhir_original_code) = "MedicationStatement"];
    MESSAGE_DEFINITION = 127 [(fhir_original_code) = "MessageDefinition"];
    MESSAGE_HEADER = 128 [(fhir_original_code) = "MessageHeader"];
    NAMING_SYSTEM = 129 [(fhir_original_code) = "NamingSystem"];
    NUTRITION_ORDER = 130 [(fhir_original_code) = "NutritionOrder"];
    OBSERVATION = 131 [(fhir_original_code) = "Observation"];
    OPERATIONDEFINITION = 132 [(fhir_original_code) = "OperationDefinition"];
    OPERATION_OUTCOME = 133 [(fhir_original_code) = "OperationOutcome"];
    ORGANIZATION = 134 [(fhir_original_code) = "Organization"];
    PARAMETERS = 135 [(fhir_original_code) = "Parameters"];
    PATIENT = 136 [(fhir_original_code) = "Patient"];
    PAYMENT_NOTICE = 137 [(fhir_original_code) = "PaymentNotice"];
    PAYMENT_RECONCILIATION = 138
        [(fhir_original_code) = "PaymentReconciliation"];
    PERSON = 139 [(fhir_original_code) = "Person"];
    PLAN_DEFINITION = 140 [(fhir_original_code) = "PlanDefinition"];
    PRACTITIONER = 141 [(fhir_original_code) = "Practitioner"];
    PRACTITIONER_ROLE = 142 [(fhir_original_code) = "PractitionerRole"];
    PROCEDURE = 143 [(fhir_original_code) = "Procedure"];
    PROCEDURE_REQUEST = 144 [(fhir_original_code) = "ProcedureRequest"];
    PROCESS_REQUEST = 145 [(fhir_original_code) = "ProcessRequest"];
    PROCESS_RESPONSE = 146 [(fhir_original_code) = "ProcessResponse"];
    PROVENANCE = 147 [(fhir_original_code) = "Provenance"];
    QUESTIONNAIRE = 148 [(fhir_original_code) = "Questionnaire"];
    QUESTIONNAIRE_RESPONSE = 149
        [(fhir_original_code) = "QuestionnaireResponse"];
    REFERRAL_REQUEST = 150 [(fhir_original_code) = "ReferralRequest"];
    RELATED_PERSON = 151 [(fhir_original_code) = "RelatedPerson"];
    REQUEST_GROUP = 152 [(fhir_original_code) = "RequestGroup"];
    RESEARCH_STUDY = 153 [(fhir_original_code) = "ResearchStudy"];
    RESEARCH_SUBJECT = 154 [(fhir_original_code) = "ResearchSubject"];
    RESOURCE = 155 [(fhir_original_code) = "Resource"];
    RISK_ASSESSMENT = 156 [(fhir_original_code) = "RiskAssessment"];
    SCHEDULE = 157 [(fhir_original_code) = "Schedule"];
    SEARCH_PARAMETER = 158 [(fhir_original_code) = "SearchParameter"];
    SEQUENCE = 159 [(fhir_original_code) = "Sequence"];
    SERVICE_DEFINITION = 160 [(fhir_original_code) = "ServiceDefinition"];
    SLOT = 161 [(fhir_original_code) = "Slot"];
    SPECIMEN = 162 [(fhir_original_code) = "Specimen"];
    STRUCTURE_DEFINITION = 163 [(fhir_original_code) = "StructureDefinition"];
    STRUCTURE_MAP = 164 [(fhir_original_code) = "StructureMap"];
    SUBSCRIPTION = 165 [(fhir_original_code) = "Subscription"];
    SUBSTANCE = 166 [(fhir_original_code) = "Substance"];
    SUPPLY_DELIVERY = 167 [(fhir_original_code) = "SupplyDelivery"];
    SUPPLY_REQUEST = 168 [(fhir_original_code) = "SupplyRequest"];
    TASK = 169 [(fhir_original_code) = "Task"];
    TEST_REPORT = 170 [(fhir_original_code) = "TestReport"];
    TEST_SCRIPT = 171 [(fhir_original_code) = "TestScript"];
    VALUE_SET = 172 [(fhir_original_code) = "ValueSet"];
    VISION_PRESCRIPTION = 173 [(fhir_original_code) = "VisionPrescription"];
    TYPE = 174 [(fhir_original_code) = "Type"];
    ANY = 175 [(fhir_original_code) = "Any"];
  }
  Value value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// Identifies the purpose for this identifier, if known .
// See http://hl7.org/fhir/ValueSet/identifier-use
message IdentifierUseCode {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;
  option (fhir_valueset_url) = "http://hl7.org/fhir/ValueSet/identifier-use";

  // Primitive value for code
  enum Value {
    INVALID_UNINITIALIZED = 0;
    USUAL = 1;
    OFFICIAL = 2;
    TEMP = 3;
    SECONDARY = 4;
  }
  Value value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// This value set includes common codes from BCP-47
// (http://tools.ietf.org/html/bcp47) See http://hl7.org/fhir/ValueSet/languages
message LanguageCode {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;
  option (fhir_valueset_url) = "http://hl7.org/fhir/ValueSet/all-languages";

  // Primitive value for code
  string value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// Any valid MimeType.
// See http://www.rfc-editor.org/bcp/bcp13.txt
message MimeTypeCode {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;
  option (fhir_valueset_url) = "http://www.rfc-editor.org/bcp/bcp13.txt";

  // Primitive value for code
  string value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// The use of a human name
// See http://hl7.org/fhir/ValueSet/name-use
message NameUseCode {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;
  option (fhir_valueset_url) = "http://hl7.org/fhir/ValueSet/name-use";

  // Primitive value for code
  enum Value {
    INVALID_UNINITIALIZED = 0;
    USUAL = 1;
    OFFICIAL = 2;
    TEMP = 3;
    NICKNAME = 4;
    ANONYMOUS = 5;
    OLD = 6;
    MAIDEN = 7;
  }
  Value value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// The status of a resource narrative
// See http://hl7.org/fhir/ValueSet/narrative-status
message NarrativeStatusCode {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;
  option (fhir_valueset_url) = "http://hl7.org/fhir/ValueSet/narrative-status";

  // Primitive value for code
  enum Value {
    INVALID_UNINITIALIZED = 0;
    GENERATED = 1;
    EXTENSIONS = 2;
    ADDITIONAL = 3;
    EMPTY = 4;
  }
  Value value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// Whether an operation parameter is an input or an output parameter.
// See http://hl7.org/fhir/ValueSet/operation-parameter-use
message OperationParameterUseCode {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;
  option (fhir_valueset_url) =
      "http://hl7.org/fhir/ValueSet/operation-parameter-use";

  // Primitive value for code
  enum Value {
    INVALID_UNINITIALIZED = 0;
    IN = 1;
    OUT = 2;
  }
  Value value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// How a property is represented when serialized.
// See http://hl7.org/fhir/ValueSet/property-representation
message PropertyRepresentationCode {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;
  option (fhir_valueset_url) =
      "http://hl7.org/fhir/ValueSet/property-representation";

  // Primitive value for code
  enum Value {
    INVALID_UNINITIALIZED = 0;
    XML_ATTR = 1 [(fhir_original_code) = "xmlAttr"];
    XML_TEXT = 2 [(fhir_original_code) = "xmlText"];
    TYPE_ATTR = 3 [(fhir_original_code) = "typeAttr"];
    CDA_TEXT = 4 [(fhir_original_code) = "cdaText"];
    XHTML = 5;
  }
  Value value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// How the Quantity should be understood and represented.
// See http://hl7.org/fhir/ValueSet/quantity-comparator
message QuantityComparatorCode {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;
  option (fhir_valueset_url) =
      "http://hl7.org/fhir/ValueSet/quantity-comparator";

  // Primitive value for code
  enum Value {
    INVALID_UNINITIALIZED = 0;
    LT = 1 [(fhir_original_code) = "<"];
    LE = 2 [(fhir_original_code) = "<="];
    GE = 3 [(fhir_original_code) = ">="];
    GT = 4 [(fhir_original_code) = ">"];
  }
  Value value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// Whether a reference needs to be version specific or version independent, or
// whether either can be used See
// http://hl7.org/fhir/ValueSet/reference-version-rules
message ReferenceVersionRulesCode {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;
  option (fhir_valueset_url) =
      "http://hl7.org/fhir/ValueSet/reference-version-rules";

  // Primitive value for code
  enum Value {
    INVALID_UNINITIALIZED = 0;
    EITHER = 1;
    INDEPENDENT = 2;
    SPECIFIC = 3;
  }
  Value value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// The type of relationship to the related artifact
// See http://hl7.org/fhir/ValueSet/related-artifact-type
message RelatedArtifactTypeCode {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;
  option (fhir_valueset_url) =
      "http://hl7.org/fhir/ValueSet/related-artifact-type";

  // Primitive value for code
  enum Value {
    INVALID_UNINITIALIZED = 0;
    DOCUMENTATION = 1;
    JUSTIFICATION = 2;
    CITATION = 3;
    PREDECESSOR = 4;
    SUCCESSOR = 5;
    DERIVED_FROM = 6;
    DEPENDS_ON = 7;
    COMPOSED_OF = 8;
  }
  Value value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// How slices are interpreted when evaluating an instance.
// See http://hl7.org/fhir/ValueSet/resource-slicing-rules
message SlicingRulesCode {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;
  option (fhir_valueset_url) =
      "http://hl7.org/fhir/ValueSet/resource-slicing-rules";

  // Primitive value for code
  enum Value {
    INVALID_UNINITIALIZED = 0;
    CLOSED = 1;
    OPEN = 2;
    OPEN_AT_END = 3 [(fhir_original_code) = "openAtEnd"];
  }
  Value value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// The type of trigger
// See http://hl7.org/fhir/ValueSet/trigger-type
message TriggerTypeCode {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;
  option (fhir_valueset_url) = "http://hl7.org/fhir/ValueSet/trigger-type";

  // Primitive value for code
  enum Value {
    INVALID_UNINITIALIZED = 0;
    NAMED_EVENT = 1;
    PERIODIC = 2;
    DATA_ADDED = 3;
    DATA_MODIFIED = 4;
    DATA_REMOVED = 5;
    DATA_ACCESSED = 6;
    DATA_ACCESS_ENDED = 7;
  }
  Value value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}

// A unit of time (units from UCUM). See
// http://hl7.org/fhir/ValueSet/units-of-time
message UnitsOfTimeCode {
  option (structure_definition_kind) = KIND_PRIMITIVE_TYPE;
  option (fhir_valueset_url) = "http://hl7.org/fhir/ValueSet/units-of-time";

  // Primitive value for code
  enum Value {
    INVALID_UNINITIALIZED = 0;
    S = 1;
    MIN = 2;
    H = 3;
    D = 4;
    WK = 5;
    MO = 6;
    A = 7;
  }
  Value value = 1;

  // xml:id (or equivalent in JSON)
  String id = 2;

  // Additional Content defined by implementations
  repeated Extension extension = 3;
}
